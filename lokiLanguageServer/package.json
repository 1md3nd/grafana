{
  "name": "grafana-loki-language-server",
  "displayName": "Faro",
  "description": "View Faro Exceptions for current file",
  "version": "1.0.0",
  "publisher": "grafana-monaloki",
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onLanguage:*",
    "onView:faro-data"
  ],
  "main": "./grafana-loki-language-server-client.js",
  "contributes": {
    "configuration": {
      "title": "Faro",
      "properties": {
        "grafana.faro.websocketUrl": {
          "type": "string",
          "default": "ws://localhost:3001/lokiLanguageServer",
          "description": "The websocket endpoint to the language server"
        },
        "grafana.faro.lokiDatasourceId": {
          "type": "string",
          "default": "Loki",
          "description": "The ID of the Loki datasource to be used"
        },
        "grafana.faro.grafanaApiKey": {
          "type": "string",
          "default": "",
          "description": "The API key to be used for Grafana authentication"
        },
        "grafana.faro.appName": {
          "type": "string",
          "default": "",
          "description": "The app name associated with the logs"
        },
        "grafana.faro.projectRoot": {
          "type": "string",
          "default": "/src",
          "description": "The root path to your project"
        }
      }
    },
    "viewsContainers": {
      "panel": [
        {
          "id": "faro",
          "title": "Faro",
          "icon": "media/dep.svg"
        }
      ]
    },
    "views": {
      "faro": [
        {
          "id": "faro-data",
          "name": "Logs",
          "type": "webview"
        }
      ]
    }
  },
  "engines": {
    "vscode": "^1.74.0"
  },
  "scripts": {
    "start": "yarn node ./extension/grafana-loki-language-server-server.js",
    "build": "yarn build:client && yarn build:server && yarn assets",
    "build:client": "cd client && yarn webpack --mode production",
    "build:server": "cd server && yarn webpack --mode production",
    "assets": "yarn assets:packagejson && yarn assets:media",
    "assets:packagejson": "cp package.json extension/package.json",
    "assets:media": "cp -R client/media extension/"
  },
  "workspaces": [
    "client",
    "server"
  ]
}
