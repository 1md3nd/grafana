// This file is autogenerated. DO NOT EDIT.
//
// Generated by pkg/framework/coremodel/gen.go
//
// Derived from the Thema lineage declared in pkg/coremodel/alertrule/coremodel.cue
//
// Run `make gen-cue` from repository root to regenerate.

export interface AlertQuery {
  /**
   * Grafana data source unique identifier; it should be '-100' for a Server Side Expression operation.
   */
  datasourceUID: string;
  /**
   * model is the raw JSON query and includes the above properties as well as custom properties.
   */
  model: string;
  queryType: string;
  refID: string;
  /**
   * RelativeTimeRange is the relative Start and End of the query as sent by the frontend.
   */
  relativeTimeRange?: RelativeTimeRange;
}

export interface RelativeTimeRange {
  from: string;
  to: string;
}

export const defaultRelativeTimeRange: Partial<RelativeTimeRange> = {
  from: 'now-6h',
  to: 'now',
};

export enum NoDataState {
  Alerting = 'Alerting',
  NoData = 'NoData',
  OK = 'OK',
}

export enum ExecutionErrState {
  Alerting = 'Alerting',
  Error = 'Error',
  OK = 'OK',
}

export interface Alertrule {
  annotations?: Record<string, unknown>;
  condition: string;
  execErrState: ExecutionErrState;
  folderUid: string;
  /**
   * A go-parseable duration string.
   */
  for: string;
  /**
   * Unique numeric identifier for the rule. Read-only.
   */
  id?: number;
  labels?: Record<string, unknown>;
  noDataState: NoDataState;
  queries?: Array<AlertQuery>;
  ruleGroup: string;
  title: string;
  /**
   * Unique identifier that can be generated by anyone. string (8-40)
   */
  uid: string;
}

export const defaultAlertrule: Partial<Alertrule> = {
  queries: [],
};
