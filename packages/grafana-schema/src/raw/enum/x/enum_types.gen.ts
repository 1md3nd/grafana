// Code generated - EDITING IS FUTILE. DO NOT EDIT.
//
// Generated by:
//     kinds/gen.go
// Using jennies:
//     TSTypesJenny
//     LatestMajorsOrXJenny
//
// Run 'make gen-cue' from repository root to regenerate.

/**
 * Dashboard panels. Panels are canonically defined inline
 * because they share a version timeline with the dashboard
 * schema; they do not evolve independently.
 */
export interface Panel {
  /**
   * Description.
   */
  datasource?: {
    type?: string;
    uid?: string;
  };
  id?: number;
  /**
   * Panel links
   */
  links?: Array<DashboardLink>;
  /**
   * options is specified by the PanelOptions field in panel
   * plugin schemas.
   */
  options: Record<string, unknown>;
  /**
   * TODO docs - seems to be an old field from old dashboard alerts?
   */
  thresholds?: Array<unknown>;
  /**
   * Panel title.
   */
  title?: string;
  /**
   * The panel plugin type id. May not be empty.
   */
  type: string;
}

export const defaultPanel: Partial<Panel> = {
  links: [],
  thresholds: [],
};

/**
 * FROM public/app/features/dashboard/state/DashboardModels.ts - ish
 */
export interface DashboardLink {
  title: string;
  url: string;
}

/**
 * Support for legacy graph and heatmap panels.
 */
export interface GraphPanel {
  /**
   * @deprecated this is part of deprecated graph panel
   */
  legend?: {
    show: boolean;
    sort?: string;
    sortDesc?: boolean;
  };
  type: 'graph';
}

export interface HeatmapPanel {
  type: 'heatmap';
}

export interface Enum {
  somePanels?: Array<(Panel | GraphPanel | HeatmapPanel)>;
}

export const defaultEnum: Partial<Enum> = {
  somePanels: [],
};
