package alertrule

import (
	"github.com/grafana/thema"
)

thema.#Lineage
name: "alertrule"
seqs: [
	{
		schemas: [
			{// 0.0

				// Unique numeric identifier for the rule. Read-only.
				id?: int64

				// Unique identifier that can be generated by anyone. string (8-40)
				uid: string

				folderUid: string

				ruleGroup: string

				title: string

				condition: string

				queries?: [...#AlertQuery]

				// TODO: timestamps
				// updated

				noDataState: #NoDataState

				execErrState: #ExecutionErrState

				// A go-parseable duration string.
				for: string

				annotations?: #Labels

				labels?:  #Labels

				///////////////////////////////////////
				// Definitions (referenced above) are declared below

				#Labels: [string]: string @cuetsy(kind="type")

				#AlertQuery: {

					refID: string

					queryType: string

					// RelativeTimeRange is the relative Start and End of the query as sent by the frontend.
					relativeTimeRange?: #RelativeTimeRange 

					// Grafana data source unique identifier; it should be '-100' for a Server Side Expression operation.
					datasourceUID: string

					// model is the raw JSON query and includes the above properties as well as custom properties.
					model: string
				} @cuetsy(kind="interface") @reviewme()

        #RelativeTimeRange: {				
			  	from: string | *"now-6h"
					to:   string | *"now"
				} @cuetsy(kind="interface") @reviewme()

				#NoDataState:       "Alerting" | "NoData" | "OK" @cuetsy(kind="enum",memberNames="Alerting|NoData|OK") @reviewme()
				#ExecutionErrState: "Alerting" | "Error" | "OK"  @cuetsy(kind="enum",memberNames="Alerting|Error|OK") @reviewme()
			},
		]
	},
]
