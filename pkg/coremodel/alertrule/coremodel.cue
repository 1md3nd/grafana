package alertrule

import (
	"github.com/grafana/thema"
)

thema.#Lineage
name: "alertrule"
seqs: [
	{
		schemas: [
			{// 0.0
				@grafana(TSVeneer="type")

				// Unique numeric identifier for the rule. Read-only.
				id?: int64

				// Unique identifier that can be generated by anyone. string (8-40)
				uid: string

				folderUid: string

				ruleGroup: string

				title: string

				condition: string

				queries: [...#AlertQuery]

				// TODO: timestamps
				// updated

				noDataState: #NoDataState

				execErrState: #ExecutionErrState

				// A go-parseable duration string.
				for: string

				annotations: [string]: string

				labels: [string]: string

				///////////////////////////////////////
				// Definitions (referenced above) are declared below

				#Label: {key: string, value: string}

				#AlertQuery: {

					refID: string

					queryType: string

					// RelativeTimeRange is the relative Start and End of the query as sent by the frontend.
					relativeTimeRange: {
						from: string | *"now-6h"
						to:   string | *"now"
					} @reviewme()

					// Grafana data source unique identifier; it should be '-100' for a Server Side Expression operation.
					datasourceUID: string

					// model is the raw JSON query and includes the above properties as well as custom properties.
					model: string
				}

				#NoDataState:       "Alerting" | "NoData" | "OK" @cuetsy(kind="enum",memberNames="Alerting|NoData|OK") @reviewme()
				#ExecutionErrState: "Alerting" | "Error" | "OK"  @cuetsy(kind="enum",memberNames="Alerting|Error|OK") @reviewme()
			},
		]
	},
]
