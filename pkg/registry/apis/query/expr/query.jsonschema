{
  "type": "object",
  "oneOf": [
    {
      "type": "object",
      "required": [
        "expression",
        "queryType",
        "refId"
      ],
      "properties": {
        "datasource": {
          "$ref": "#/definitions/datasource"
        },
        "expression": {
          "description": "General math expression",
          "type": "string",
          "minLength": 1,
          "examples": [
            "$A + 1",
            "$A/$B"
          ]
        },
        "hide": {
          "$ref": "#/definitions/hide"
        },
        "intervalMs": {
          "$ref": "#/definitions/intervalMs"
        },
        "maxDataPoints": {
          "$ref": "#/definitions/maxDataPoints"
        },
        "queryType": {
          "description": "math",
          "type": "string",
          "pattern": "^math$"
        },
        "refId": {
          "$ref": "#/definitions/refId"
        },
        "resultAssertions": {
          "$ref": "#/definitions/resultAssertions"
        },
        "timeRange": {
          "$ref": "#/definitions/timeRange"
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "expression",
        "reducer",
        "queryType",
        "refId"
      ],
      "properties": {
        "datasource": {
          "$ref": "#/definitions/datasource"
        },
        "expression": {
          "description": "Reference to single query result",
          "type": "string",
          "minLength": 1,
          "examples": [
            "$A"
          ]
        },
        "hide": {
          "$ref": "#/definitions/hide"
        },
        "intervalMs": {
          "$ref": "#/definitions/intervalMs"
        },
        "maxDataPoints": {
          "$ref": "#/definitions/maxDataPoints"
        },
        "queryType": {
          "description": "reduce",
          "type": "string",
          "pattern": "^reduce$"
        },
        "reducer": {
          "description": "The reducer\n\n\nPossible enum values:\n - `\"sum\"` \n - `\"mean\"` \n - `\"min\"` \n - `\"max\"` \n - `\"count\"` \n - `\"last\"` ",
          "type": "string",
          "enum": [
            "sum",
            "mean",
            "min",
            "max",
            "count",
            "last"
          ],
          "x-enum-description": {}
        },
        "refId": {
          "$ref": "#/definitions/refId"
        },
        "resultAssertions": {
          "$ref": "#/definitions/resultAssertions"
        },
        "settings": {
          "description": "Reducer Options",
          "type": "object",
          "required": [
            "mode"
          ],
          "properties": {
            "mode": {
              "description": "Non-number reduce behavior\n\n\nPossible enum values:\n - `\"dropNN\"` Drop non-numbers\n - `\"replaceNN\"` Replace non-numbers",
              "type": "string",
              "enum": [
                "dropNN",
                "replaceNN"
              ],
              "x-enum-description": {
                "dropNN": "Drop non-numbers",
                "replaceNN": "Replace non-numbers"
              }
            },
            "replaceWithValue": {
              "description": "Only valid when mode is replace",
              "type": "number"
            }
          },
          "additionalProperties": false
        },
        "timeRange": {
          "$ref": "#/definitions/timeRange"
        }
      },
      "additionalProperties": false
    },
    {
      "description": "QueryType = resample",
      "type": "object",
      "required": [
        "expression",
        "window",
        "downsampler",
        "upsampler",
        "queryType",
        "refId"
      ],
      "properties": {
        "datasource": {
          "$ref": "#/definitions/datasource"
        },
        "downsampler": {
          "description": "The downsample function",
          "type": "string"
        },
        "expression": {
          "description": "The math expression",
          "type": "string",
          "minLength": 1,
          "examples": [
            "$A + 1",
            "$A"
          ]
        },
        "hide": {
          "$ref": "#/definitions/hide"
        },
        "intervalMs": {
          "$ref": "#/definitions/intervalMs"
        },
        "maxDataPoints": {
          "$ref": "#/definitions/maxDataPoints"
        },
        "queryType": {
          "description": "resample",
          "type": "string",
          "pattern": "^resample$"
        },
        "refId": {
          "$ref": "#/definitions/refId"
        },
        "resultAssertions": {
          "$ref": "#/definitions/resultAssertions"
        },
        "timeRange": {
          "$ref": "#/definitions/timeRange"
        },
        "upsampler": {
          "description": "The upsample function",
          "type": "string"
        },
        "window": {
          "description": "The time durration",
          "type": "string",
          "minLength": 1,
          "examples": [
            "1w",
            "10m"
          ]
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "conditions",
        "queryType",
        "refId"
      ],
      "properties": {
        "conditions": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "evaluator",
              "operator",
              "query",
              "reducer"
            ],
            "properties": {
              "evaluator": {
                "type": "object",
                "required": [
                  "params",
                  "type"
                ],
                "properties": {
                  "params": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    }
                  },
                  "type": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "operator": {
                "type": "object",
                "required": [
                  "type"
                ],
                "properties": {
                  "type": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "query": {
                "type": "object",
                "required": [
                  "params"
                ],
                "properties": {
                  "params": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "additionalProperties": false
              },
              "reducer": {
                "type": "object",
                "required": [
                  "type"
                ],
                "properties": {
                  "type": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        },
        "datasource": {
          "$ref": "#/definitions/datasource"
        },
        "hide": {
          "$ref": "#/definitions/hide"
        },
        "intervalMs": {
          "$ref": "#/definitions/intervalMs"
        },
        "maxDataPoints": {
          "$ref": "#/definitions/maxDataPoints"
        },
        "queryType": {
          "description": "classic",
          "type": "string",
          "pattern": "^classic$"
        },
        "refId": {
          "$ref": "#/definitions/refId"
        },
        "resultAssertions": {
          "$ref": "#/definitions/resultAssertions"
        },
        "timeRange": {
          "$ref": "#/definitions/timeRange"
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "expression",
        "conditions",
        "queryType",
        "refId"
      ],
      "properties": {
        "conditions": {
          "description": "Threshold Conditions",
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "evaluator",
              "unloadEvaluator",
              "loadedDimensions"
            ],
            "properties": {
              "evaluator": {
                "type": "object",
                "required": [
                  "params",
                  "type"
                ],
                "properties": {
                  "params": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    }
                  },
                  "type": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "loadedDimensions": {
                "type": "object",
                "additionalProperties": true,
                "x-grafana-type": "data.DataFrame"
              },
              "unloadEvaluator": {
                "type": "object",
                "required": [
                  "params",
                  "type"
                ],
                "properties": {
                  "params": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    }
                  },
                  "type": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        },
        "datasource": {
          "$ref": "#/definitions/datasource"
        },
        "expression": {
          "description": "Reference to single query result",
          "type": "string",
          "minLength": 1,
          "examples": [
            "$A"
          ]
        },
        "hide": {
          "$ref": "#/definitions/hide"
        },
        "intervalMs": {
          "$ref": "#/definitions/intervalMs"
        },
        "maxDataPoints": {
          "$ref": "#/definitions/maxDataPoints"
        },
        "queryType": {
          "description": "threshold",
          "type": "string",
          "pattern": "^threshold$"
        },
        "refId": {
          "$ref": "#/definitions/refId"
        },
        "resultAssertions": {
          "$ref": "#/definitions/resultAssertions"
        },
        "timeRange": {
          "$ref": "#/definitions/timeRange"
        }
      },
      "additionalProperties": false
    }
  ],
  "properties": {
    "queryType": {
      "description": "Query type selector",
      "type": "string",
      "enum": [
        "math",
        "reduce",
        "resample",
        "classic",
        "threshold"
      ]
    }
  },
  "definitions": {
    "datasource": {
      "description": "The datasource",
      "type": "object",
      "required": [
        "type",
        "uid"
      ],
      "properties": {
        "type": {
          "description": "The datasource plugin type",
          "type": "string"
        },
        "uid": {
          "description": "Datasource UID",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "hide": {
      "description": "true if query is disabled (ie should not be returned to the dashboard)\nNote this does not always imply that the query should not be executed since\nthe results from a hidden query may be used as the input to other queries (SSE etc)",
      "type": "boolean"
    },
    "intervalMs": {
      "description": "Interval is the suggested duration between time points in a time series query.",
      "type": "number"
    },
    "maxDataPoints": {
      "description": "MaxDataPoints is the maximum number of data points that should be returned from a time series query.",
      "type": "integer"
    },
    "refId": {
      "description": "RefID is the unique identifier of the query, set by the frontend call.",
      "type": "string"
    },
    "resultAssertions": {
      "description": "Optionally define expected query result behavior",
      "type": "object",
      "required": [
        "typeVersion"
      ],
      "properties": {
        "maxBytes": {
          "description": "Maximum bytes that can be read -- if the query planning expects more then this, the query may fail fast",
          "type": "integer"
        },
        "maxFrames": {
          "description": "Maximum frame count",
          "type": "integer"
        },
        "type": {
          "description": "Type asserts that the frame matches a known type structure.",
          "type": "string"
        },
        "typeVersion": {
          "description": "TypeVersion is the version of the Type property. Versions greater than 0.0 correspond to the dataplane\ncontract documentation https://grafana.github.io/dataplane/contract/.",
          "type": "array",
          "maxItems": 2,
          "minItems": 2,
          "items": {
            "type": "integer"
          }
        }
      },
      "additionalProperties": false
    },
    "timeRange": {
      "description": "TimeRange represents the query range\nNOTE: unlike generic /ds/query, we can now send explicit time values in each query",
      "type": "object",
      "required": [
        "from",
        "to"
      ],
      "properties": {
        "from": {
          "description": "From is the start time of the query.",
          "type": "string"
        },
        "to": {
          "description": "To is the end time of the query.",
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  },
  "discriminator": "queryType"
}