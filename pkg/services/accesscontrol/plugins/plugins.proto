syntax = "proto3";
package accesscontrol.plugins;

import "google/protobuf/any.proto";

option go_package = "./;plugins";

// To build
// protoc -I ./ plugins.proto  --go-grpc_out=./ --go_out=./

/* Types */
message User {
    int64 ID = 1;
    int64 orgID = 2;
}

message Error {
    string error = 1;
}

message StatusResponse {
    bool status = 1;
}

message Permission {
    string action = 1;
    string scope = 2;
}

message Role {
    string name = 1;
    string uid = 2;
    int64 version = 3;
    string displayName = 4;
    string description = 5;
    string group = 6;
    bool hidden = 7;
    repeated Permission permissions = 8;
}

message RoleRegistration {
    Role role = 1;
    repeated string Grants = 2;
}

message PermissionEvaluator {
    string action = 1;
    repeated string scope = 2;
}

message AnyEvaluator {
    repeated google.protobuf.Any anyOf = 1;
}

message AllEvaluator {
    repeated google.protobuf.Any allOf = 1;
}

message Evaluator {
    google.protobuf.Any ev = 1;
}

/* Requests and Responses */ 
message RegisterPluginRolesRequest {
    repeated RoleRegistration registrations = 1;
}

message RegisterPluginRolesResponse {
    Error error = 1;
}

message HasAccessRequest {
    User user = 1;
    Evaluator evaluator = 2;
}

message HasAccessResponse {
    bool hasAccess = 1;
}

message Void {}

/* Services */
service AccessControl {
    rpc Status(Void) returns (StatusResponse);
    rpc RegisterPluginRoles(RegisterPluginRolesRequest) returns (RegisterPluginRolesResponse);
    rpc HasAccess(HasAccessRequest) returns (HasAccessResponse);
    // TODO Describe filter
    // Filter(resourceUIDs, evaluator, scopePrefix) map[string]bool    
}

