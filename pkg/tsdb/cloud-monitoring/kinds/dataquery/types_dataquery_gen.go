// Code generated - EDITING IS FUTILE. DO NOT EDIT.
//
// Generated by:
//     public/app/plugins/gen.go
// Using jennies:
//     PluginGoTypesJenny
//
// Run 'make gen-cue' from repository root to regenerate.

package dataquery

// Defines values for AnnotationQueryPreprocessor.
const (
	AnnotationQueryPreprocessorDelta AnnotationQueryPreprocessor = "delta"

	AnnotationQueryPreprocessorNone AnnotationQueryPreprocessor = "none"

	AnnotationQueryPreprocessorRate AnnotationQueryPreprocessor = "rate"
)

// Defines values for PreprocessorType.
const (
	PreprocessorTypeDelta PreprocessorType = "delta"

	PreprocessorTypeNone PreprocessorType = "none"

	PreprocessorTypeRate PreprocessorType = "rate"
)

// Defines values for QueryType.
const (
	QueryTypeAnnotation QueryType = "annotation"

	QueryTypeSlo QueryType = "slo"

	QueryTypeTimeSeriesList QueryType = "timeSeriesList"

	QueryTypeTimeSeriesQuery QueryType = "timeSeriesQuery"
)

// Defines values for TimeSeriesListPreprocessor.
const (
	TimeSeriesListPreprocessorDelta TimeSeriesListPreprocessor = "delta"

	TimeSeriesListPreprocessorNone TimeSeriesListPreprocessor = "none"

	TimeSeriesListPreprocessorRate TimeSeriesListPreprocessor = "rate"
)

// preprocessor is not part of the API, but is used to store the preprocessor
// and not affect the UI for the rest of parameters
type AnnotationQueryPreprocessor string

// CloudMonitoringQuery defines model for CloudMonitoringQuery.
type CloudMonitoringQuery struct {
	AliasBy *string `json:"aliasBy,omitempty"`

	// For mixed data sources the selected datasource is on the query level.
	// For non mixed scenarios this is undefined.
	// TODO find a better way to do this ^ that's friendly to schema
	// TODO this shouldn't be unknown but DataSourceRef | null
	Datasource *interface{} `json:"datasource,omitempty"`

	// true if query is disabled (ie should not be returned to the dashboard)
	Hide       *bool `json:"hide,omitempty"`
	IntervalMs int64 `json:"intervalMs"`

	// Unique, guid like, string used in explore mode
	Key *string `json:"key,omitempty"`

	// Specify the query flavor
	// TODO make this required and give it a default
	QueryType *string `json:"queryType,omitempty"`

	// A - Z
	RefId    string `json:"refId"`
	SloQuery *struct {
		AlignmentPeriod  *string  `json:"alignmentPeriod,omitempty"`
		Goal             *float32 `json:"goal,omitempty"`
		LookbackPeriod   *string  `json:"lookbackPeriod,omitempty"`
		PerSeriesAligner *string  `json:"perSeriesAligner,omitempty"`
		ProjectName      string   `json:"projectName"`
		SelectorName     string   `json:"selectorName"`
		ServiceId        string   `json:"serviceId"`
		ServiceName      string   `json:"serviceName"`
		SloId            string   `json:"sloId"`
		SloName          string   `json:"sloName"`
	} `json:"sloQuery,omitempty"`

	// queryType cannot be overwritten yet
	// queryType: #QueryType
	TimeSeriesList  *interface{} `json:"timeSeriesList,omitempty"`
	TimeSeriesQuery *struct {
		// To disable the graphPeriod, it should explictly be set to 'disabled'
		GraphPeriod *interface{} `json:"graphPeriod,omitempty"`
		ProjectName string       `json:"projectName"`
		Query       string       `json:"query"`
	} `json:"timeSeriesQuery,omitempty"`
}

// GoogleCloudMonitoringDataQuery defines model for GoogleCloudMonitoringDataQuery.
type GoogleCloudMonitoringDataQuery map[string]interface{}

// PreprocessorType defines model for PreprocessorType.
type PreprocessorType string

// QueryType defines model for QueryType.
type QueryType string

// SLOQuery defines model for SLOQuery.
type SLOQuery struct {
	AlignmentPeriod  *string  `json:"alignmentPeriod,omitempty"`
	Goal             *float32 `json:"goal,omitempty"`
	LookbackPeriod   *string  `json:"lookbackPeriod,omitempty"`
	PerSeriesAligner *string  `json:"perSeriesAligner,omitempty"`
	ProjectName      string   `json:"projectName"`
	SelectorName     string   `json:"selectorName"`
	ServiceId        string   `json:"serviceId"`
	ServiceName      string   `json:"serviceName"`
	SloId            string   `json:"sloId"`
	SloName          string   `json:"sloName"`
}

// preprocessor is not part of the API, but is used to store the preprocessor
// and not affect the UI for the rest of parameters
type TimeSeriesListPreprocessor string

// TimeSeriesQuery defines model for TimeSeriesQuery.
type TimeSeriesQuery struct {
	// To disable the graphPeriod, it should explictly be set to 'disabled'
	GraphPeriod *interface{} `json:"graphPeriod,omitempty"`
	ProjectName string       `json:"projectName"`
	Query       string       `json:"query"`
}
