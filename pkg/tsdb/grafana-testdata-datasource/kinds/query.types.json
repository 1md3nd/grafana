{
  "kind": "QueryTypeDefinitionList",
  "apiVersion": "query.grafana.app/v0alpha1",
  "metadata": {
    "resourceVersion": "1708553215157"
  },
  "items": [
    {
      "metadata": {
        "name": "default",
        "resourceVersion": "1708553215157",
        "creationTimestamp": "2024-02-21T22:06:55Z"
      },
      "spec": {
        "querySchema": {
          "$schema": "https://json-schema.org/draft-04/schema",
          "properties": {
            "alias": {
              "type": "string"
            },
            "channel": {
              "type": "string"
            },
            "csvContent": {
              "type": "string"
            },
            "csvFileName": {
              "type": "string"
            },
            "csvWave": {
              "items": {
                "properties": {
                  "labels": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "timeStep": {
                    "type": "integer"
                  },
                  "valuesCSV": {
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "type": "object",
                "description": "CSVWave defines model for CSVWave."
              },
              "type": "array"
            },
            "dropPercent": {
              "type": "number",
              "description": "Drop percentage (the chance we will lose a point 0-100)"
            },
            "errorType": {
              "type": "string"
            },
            "flamegraphDiff": {
              "type": "boolean"
            },
            "labels": {
              "type": "string"
            },
            "levelColumn": {
              "type": "boolean"
            },
            "lines": {
              "type": "integer"
            },
            "nodes": {
              "properties": {
                "count": {
                  "type": "integer"
                },
                "seed": {
                  "type": "integer"
                },
                "type": {
                  "type": "string"
                }
              },
              "additionalProperties": false,
              "type": "object"
            },
            "points": {
              "items": {
                "items": true,
                "type": "array"
              },
              "type": "array"
            },
            "pulseWave": {
              "properties": {
                "offCount": {
                  "type": "integer"
                },
                "offValue": {
                  "type": "number"
                },
                "onCount": {
                  "type": "integer"
                },
                "onValue": {
                  "type": "number"
                },
                "timeStep": {
                  "type": "integer"
                }
              },
              "additionalProperties": false,
              "type": "object"
            },
            "rawFrameContent": {
              "type": "string"
            },
            "scenarioId": {
              "type": "string"
            },
            "seriesCount": {
              "type": "integer"
            },
            "sim": {
              "properties": {
                "config": {
                  "type": "object"
                },
                "key": {
                  "properties": {
                    "tick": {
                      "type": "number"
                    },
                    "type": {
                      "type": "string"
                    },
                    "uid": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false,
                  "type": "object",
                  "required": [
                    "tick",
                    "type"
                  ]
                },
                "last": {
                  "type": "boolean"
                },
                "stream": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "required": [
                "key"
              ]
            },
            "spanCount": {
              "type": "integer"
            },
            "stream": {
              "properties": {
                "bands": {
                  "type": "integer"
                },
                "noise": {
                  "type": "integer"
                },
                "speed": {
                  "type": "integer"
                },
                "spread": {
                  "type": "integer"
                },
                "type": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "required": [
                "noise",
                "speed",
                "spread",
                "type"
              ]
            },
            "stringInput": {
              "type": "string"
            },
            "usa": {
              "properties": {
                "fields": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "mode": {
                  "type": "string"
                },
                "period": {
                  "type": "string"
                },
                "states": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "additionalProperties": false,
              "type": "object"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "description": "TestDataDataQuery defines model for TestDataDataQuery."
        },
        "examples": [
          {
            "name": "example timeseries",
            "queryPayload": {
              "nodes": {},
              "scenarioId": "manual_entry"
            }
          }
        ]
      }
    }
  ]
}