{
  "description": "PrometheusDataQuery defines model for PrometheusDataQuery.",
  "type": "object",
  "required": [
    "expr"
  ],
  "properties": {
    "datasource": {
      "description": "The datasource",
      "type": "object",
      "required": [
        "type",
        "uid"
      ],
      "properties": {
        "type": {
          "description": "The datasource plugin type",
          "type": "string"
        },
        "uid": {
          "description": "Datasource UID",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "editorMode": {
      "description": "what we should show in the editor",
      "type": "string"
    },
    "exemplar": {
      "description": "Execute an additional query to identify interesting raw samples relevant for the given expr",
      "type": "boolean"
    },
    "expr": {
      "description": "The actual expression/query that will be evaluated by Prometheus",
      "type": "string"
    },
    "format": {
      "description": "The response format",
      "type": "string"
    },
    "hide": {
      "description": "true if query is disabled (ie should not be returned to the dashboard)\nNote this does not always imply that the query should not be executed since\nthe results from a hidden query may be used as the input to other queries (SSE etc)",
      "type": "boolean"
    },
    "instant": {
      "description": "Returns only the latest value that Prometheus has scraped for the requested time series",
      "type": "boolean"
    },
    "intervalFactor": {
      "description": "@deprecated Used to specify how many times to divide max data points by. We use max data points under query options\nSee https://github.com/grafana/grafana/issues/48081",
      "type": "number"
    },
    "intervalMs": {
      "description": "Interval is the suggested duration between time points in a time series query.",
      "type": "number"
    },
    "legendFormat": {
      "description": "Series name override or template. Ex. {{hostname}} will be replaced with label value for hostname",
      "type": "string"
    },
    "maxDataPoints": {
      "description": "MaxDataPoints is the maximum number of data points that should be returned from a time series query.",
      "type": "integer"
    },
    "queryType": {
      "description": "QueryType is an optional identifier for the type of query.\nIt can be used to distinguish different types of queries.",
      "type": "string"
    },
    "range": {
      "description": "Returns a Range vector, comprised of a set of time series containing a range of data points over time for each time series",
      "type": "boolean"
    },
    "refId": {
      "description": "RefID is the unique identifier of the query, set by the frontend call.",
      "type": "string"
    },
    "resultAssertions": {
      "description": "Optionally define expected query result behavior",
      "type": "object",
      "required": [
        "typeVersion"
      ],
      "properties": {
        "maxBytes": {
          "description": "Maximum bytes that can be read -- if the query planning expects more then this, the query may fail fast",
          "type": "integer"
        },
        "maxFrames": {
          "description": "Maximum frame count",
          "type": "integer"
        },
        "type": {
          "description": "Type asserts that the frame matches a known type structure.",
          "type": "string"
        },
        "typeVersion": {
          "description": "TypeVersion is the version of the Type property. Versions greater than 0.0 correspond to the dataplane\ncontract documentation https://grafana.github.io/dataplane/contract/.",
          "type": "array",
          "maxItems": 2,
          "minItems": 2,
          "items": {
            "type": "integer"
          }
        }
      },
      "additionalProperties": false
    },
    "scope": {
      "description": "???",
      "type": "object",
      "required": [
        "matchers"
      ],
      "properties": {
        "matchers": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "timeRange": {
      "description": "TimeRange represents the query range\nNOTE: unlike generic /ds/query, we can now send explicit time values in each query",
      "type": "object",
      "required": [
        "from",
        "to"
      ],
      "properties": {
        "from": {
          "description": "From is the start time of the query.",
          "type": "string"
        },
        "to": {
          "description": "To is the end time of the query.",
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  },
  "additionalProperties": false
}