// Code generated - EDITING IS FUTILE. DO NOT EDIT.
//
// Generated by:
//     public/app/plugins/gen.go
// Using jennies:
//     GoTypesJenny
//     PluginGoTypesJenny
//
// Run 'make gen-cue' from repository root to regenerate.

package PrometheusDataQuery

// Defines values for EditorMode.
const (
	EditorModeBuilder EditorMode = "builder"

	EditorModeCode EditorMode = "code"
)

// Defines values for QueryType.
const (
	QueryTypeExemplar QueryType = "exemplar"

	QueryTypeInstant QueryType = "instant"

	QueryTypeRange QueryType = "range"

	QueryTypeUnknown QueryType = "unknown"
)

// Defines values for QueryEditorMode.
const (
	QueryEditorModeBuilder QueryEditorMode = "builder"

	QueryEditorModeCode QueryEditorMode = "code"
)

// PrometheusDataQuery defines model for PrometheusDataQuery.
type PrometheusDataQuery struct {
	// For mixed data sources the selected datasource is on the query level.
	// For non mixed scenarios this is undefined.
	// TODO find a better way to do this ^ that's friendly to schema
	Datasource *struct {
		// The plugin type-id
		Type *string `json:"type,omitempty"`

		// Specific datasource instance
		Uid *string `json:"uid,omitempty"`
	} `json:"datasource,omitempty"`

	// TODO docs
	EditorMode *EditorMode `json:"editorMode,omitempty"`

	// TODO docs
	Exemplar bool `json:"exemplar"`

	// TODO docs
	Expr string `json:"expr"`

	// TODO docs
	Format *string `json:"format,omitempty"`

	// true if query is disabled (ie should not be returned to the dashboard)
	Hide *bool `json:"hide,omitempty"`

	// TODO docs
	Hinting *bool `json:"hinting,omitempty"`

	// TODO docs
	Instant bool `json:"instant"`

	// TODO docs
	Interval *string `json:"interval,omitempty"`

	// TODO docs
	IntervalFactor *int64 `json:"intervalFactor,omitempty"`

	// TODO this doesn't appear on frontend?
	// TODO docs
	IntervalMS *int64 `json:"intervalMS,omitempty"`

	// Unique, guid like, string used in explore mode
	Key *string `json:"key,omitempty"`

	// TODO docs
	LegendFormat *string `json:"legendFormat,omitempty"`

	// TODO docs
	//
	//
	// Specify the query flavor
	// TODO make this required and give it a default
	QueryType QueryType `json:"queryType"`

	// TODO docs
	Range bool `json:"range"`

	// A - Z
	RefId string `json:"refId"`

	// TODO docs
	RequestId *string `json:"requestId,omitempty"`

	// TODO docs
	ShowingGraph *bool `json:"showingGraph,omitempty"`

	// TODO docs
	ShowingTable *bool `json:"showingTable,omitempty"`

	// TODO docs
	StepMode *string `json:"stepMode,omitempty"`

	// Timezone offset to align start & end time on backend
	UtcOffsetSec *int64 `json:"utcOffsetSec,omitempty"`

	// TODO docs
	ValueWithRefId *bool `json:"valueWithRefId,omitempty"`
}

// TODO docs
type EditorMode string

// TODO docs
//
// Specify the query flavor
// TODO make this required and give it a default
type QueryType string

// QueryEditorMode defines model for QueryEditorMode.
type QueryEditorMode string
