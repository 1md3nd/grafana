// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should be able to pause a rule 1`] = `
{
  "data": {
    "message": "updated",
    "updated": [],
  },
  "endpointName": "updateRuleGroupForNamespace",
  "fulfilledTimeStamp": Any<Number>,
  "isError": false,
  "isLoading": false,
  "isSuccess": true,
  "isUninitialized": false,
  "originalArgs": {
    "namespace": "uuid020c61ef",
    "payload": {
      "interval": "1m",
      "name": "grafana-group-1",
      "rules": [
        {
          "annotations": {
            "summary": "Test alert",
          },
          "for": "5m",
          "grafana_alert": {
            "condition": "A",
            "data": [
              {
                "datasourceUid": "datasource-uid",
                "model": {
                  "datasource": {
                    "type": "prometheus",
                    "uid": "datasource-uid",
                  },
                  "expression": "vector(1)",
                  "queryType": "alerting",
                  "refId": "A",
                },
                "queryType": "alerting",
                "refId": "A",
                "relativeTimeRange": {
                  "from": 1000,
                  "to": 2000,
                },
              },
            ],
            "exec_err_state": "Error",
            "is_paused": true,
            "namespace_uid": "uuid020c61ef",
            "no_data_state": "NoData",
            "rule_group": "grafana-group-1",
            "title": "Grafana-rule",
            "uid": "4d7125fee983",
          },
          "labels": {
            "region": "nasa",
            "severity": "critical",
          },
        },
      ],
    },
    "rulerConfig": {
      "apiVersion": "legacy",
      "dataSourceName": "grafana",
    },
  },
  "requestId": Any<String>,
  "reset": [Function],
  "startedTimeStamp": Any<Number>,
  "status": "fulfilled",
}
`;
