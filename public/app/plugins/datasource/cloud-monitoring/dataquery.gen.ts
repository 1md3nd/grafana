// Code generated - EDITING IS FUTILE. DO NOT EDIT.
//
// Generated by:
//     public/app/plugins/gen.go
// Using jennies:
//     TSTypesJenny
//     PluginTSTypesJenny
//
// Run 'make gen-cue' from repository root to regenerate.

import * as common from '@grafana/schema';

export const DataQueryModelVersion = Object.freeze([0, 0]);

export interface CloudMonitoringQuery extends common.DataQuery {
  aliasBy?: string;
  intervalMs: number;
  sloQuery?: SLOQuery;
  /**
   * queryType cannot be overwritten yet
   * queryType: #QueryType
   */
  timeSeriesList?: (TimeSeriesList | AnnotationQuery);
  timeSeriesQuery?: TimeSeriesQuery;
}

export enum QueryType {
  Annotation = 'annotation',
  Slo = 'slo',
  TimeSeriesList = 'timeSeriesList',
  TimeSeriesQuery = 'timeSeriesQuery',
}

export interface TimeSeriesList {
  alignmentPeriod?: string;
  crossSeriesReducer: string;
  filters?: Array<string>;
  groupBys?: Array<string>;
  perSeriesAligner?: string;
  /**
   * preprocessor is not part of the API, but is used to store the preprocessor
   * and not affect the UI for the rest of parameters
   */
  preprocessor?: PreprocessorType;
  projectName: string;
  secondaryAlignmentPeriod?: string;
  secondaryCrossSeriesReducer?: string;
  secondaryGroupBys?: Array<string>;
  secondaryPerSeriesAligner?: string;
  view?: string;
}

export const defaultTimeSeriesList: Partial<TimeSeriesList> = {
  filters: [],
  groupBys: [],
  secondaryGroupBys: [],
};

export enum PreprocessorType {
  Delta = 'delta',
  None = 'none',
  Rate = 'rate',
}

export interface AnnotationQuery extends TimeSeriesList {
  text?: string;
  title?: string;
}

export interface TimeSeriesQuery {
  /**
   * To disable the graphPeriod, it should explictly be set to 'disabled'
   */
  graphPeriod?: ('disabled' | string);
  projectName: string;
  query: string;
}

export interface SLOQuery {
  alignmentPeriod?: string;
  goal?: number;
  lookbackPeriod?: string;
  perSeriesAligner?: string;
  projectName: string;
  selectorName: string;
  serviceId: string;
  serviceName: string;
  sloId: string;
  sloName: string;
}

export interface GoogleCloudMonitoring {}
