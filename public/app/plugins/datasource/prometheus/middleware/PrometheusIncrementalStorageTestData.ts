import moment from 'moment';

/**
 *
 * @param length - Number of values to add
 * @param start - First timestamp (ms)
 * @param step - step duration (ms)
 */
export const getMockTimeFrameArray = (length: number, start: number, step: number): number[] => {
  let timeValues = [];
  for (let i = 0; i < length; i++) {
    timeValues.push(start + i * step);
  }
  return timeValues;
};

/**
 *
 * @param startDateString - timestamp or argument fed to Date constructor
 * @param endDateString - timestamp or argument fed to Date constructor
 */
export const mockOriginalRange = (startDateString?: string, endDateString?: string): { end: number; start: number } => {
  return {
    start: new Date(startDateString ?? '2023-01-30T19:33:31.357Z').valueOf(),
    end: new Date(endDateString ?? '2023-01-30T20:33:31.357Z').valueOf(),
  };
};

/**
 *
 * @param length - Number of values to add
 * @param start - First timestamp (ms)
 * @param step - step duration (ms)
 */
export const getMockValueFrameArray = (length: number, low: number, high: number): number[] => {
  let timeValues = [];
  for (let i = 0; i < length; i++) {
    timeValues.push(randomNumber(low, high));
  }
  return timeValues;
};

/**
 *
 * @param min
 * @param max
 */
const randomNumber = (min: number, max: number): number => {
  return Math.floor(Math.random() * (max - min) + min);
};

export const IncrementalStorageDataFrameScenarios = {
  histogram: {
    // 3 requests, one 30 seconds after the first, and then the user waits a minute and shortens to a 5 minute query window from 1 hour to force frames to get evicted
    evictionRequests: {
      first: {
        request: {
          range: {
            from: '2023-01-30T19:33:01.332Z',
            to: '2023-01-30T20:33:01.332Z',
            raw: { from: 'now-1h', to: 'now' },
          },
          interval: '15s',
          intervalMs: 15000,
          targets: [
            {
              datasource: { type: 'prometheus', uid: 'OPQv8Kc4z' },
              editorMode: 'code',
              exemplar: false,
              expr: 'sum by(le) (rate(cortex_request_duration_seconds_bucket{cluster="dev-us-central-0", job="cortex-dev-01/cortex-gw-internal", namespace="cortex-dev-01"}[$__rate_interval]))',
              format: 'heatmap',
              legendFormat: '{{le}}',
              range: true,
              refId: 'A',
              requestId: '2A',
              utcOffsetSec: -21600,
            },
          ],
          maxDataPoints: 871,
          scopedVars: {
            __interval: { text: '15s', value: '15s' },
            __interval_ms: { text: '15000', value: 15000 },
          },
          startTime: 1675110781332,
          rangeRaw: { from: 'now-1h', to: 'now' },
        },
        dataFrame: {
          name: '0.005',
          refId: 'A',
          meta: {
            type: 'heatmap-rows',
            custom: { resultType: 'matrix' },
            executedQueryString:
              'Expr: sum by(le) (rate(cortex_request_duration_seconds_bucket{cluster="dev-us-central-0", job="cortex-dev-01/cortex-gw-internal", namespace="cortex-dev-01"}[1m0s]))\nStep: 15s',
          },
          fields: [
            {
              name: 'Time',
              type: 'time',
              typeInfo: { frame: 'time.Time' },
              config: { interval: 15000 },
              values: getMockTimeFrameArray(241, 1675107180000, 15000),
              entities: {},
            },
            {
              name: '0.005',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '0.005' },
              config: { displayNameFromDS: '0.005' },
              values: getMockValueFrameArray(241, 2.8, 5.86),
              entities: {},
            },
            {
              name: '0.01',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '0.01' },
              config: { displayNameFromDS: '0.01' },
              values: getMockValueFrameArray(241, 2.8, 5.86),
              entities: {},
            },
            {
              name: '0.025',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '0.025' },
              config: { displayNameFromDS: '0.025' },
              values: getMockValueFrameArray(241, 2.8, 5.86),
              entities: {},
            },
            {
              name: '0.05',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '0.05' },
              config: { displayNameFromDS: '0.05' },
              values: getMockValueFrameArray(241, 2.8, 5.86),
              entities: {},
            },
            {
              name: '0.1',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '0.1' },
              config: { displayNameFromDS: '0.1' },
              values: getMockValueFrameArray(241, 2.8, 5.86),
              entities: {},
            },
            {
              name: '0.25',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '0.25' },
              config: { displayNameFromDS: '0.25' },
              values: getMockValueFrameArray(241, 2.8, 5.86),
              entities: {},
            },
            {
              name: '0.5',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '0.5' },
              config: { displayNameFromDS: '0.5' },
              values: getMockValueFrameArray(241, 2.8, 5.86),
              entities: {},
            },
            {
              name: '1.0',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '1.0' },
              config: { displayNameFromDS: '1.0' },
              values: getMockValueFrameArray(241, 2.8, 5.86),
              entities: {},
            },
            {
              name: '2.5',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '2.5' },
              config: { displayNameFromDS: '2.5' },
              values: getMockValueFrameArray(241, 2.8, 5.86),
              entities: {},
            },
            {
              name: '5.0',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '5.0' },
              config: { displayNameFromDS: '5.0' },
              values: getMockValueFrameArray(241, 2.8, 5.86),
              entities: {},
            },
            {
              name: '10.0',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '10.0' },
              config: { displayNameFromDS: '10.0' },
              values: getMockValueFrameArray(241, 2.8, 5.86),
              entities: {},
            },
            {
              name: '25.0',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '25.0' },
              config: { displayNameFromDS: '25.0' },
              values: getMockValueFrameArray(241, 2.8, 5.86),
              entities: {},
            },
            {
              name: '50.0',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '50.0' },
              config: { displayNameFromDS: '50.0' },
              values: getMockValueFrameArray(241, 2.8, 5.86),
              entities: {},
            },
            {
              name: '100.0',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '100.0' },
              config: { displayNameFromDS: '100.0' },
              values: getMockValueFrameArray(241, 2.8, 5.86),
              entities: {},
            },
            {
              name: '+Inf',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '+Inf' },
              config: { displayNameFromDS: '+Inf' },
              values: getMockValueFrameArray(241, 2.8, 5.86),
              entities: {},
            },
          ],
          length: 241,
        },
        originalRange: undefined,
        timeSrv:
          '{"from":"2023-01-30T19:33:01.677Z","to":"2023-01-30T20:33:01.677Z","raw":{"from":"now-1h","to":"now"}}',
      },
      second: {
        request: {
          range: {
            from: '2023-01-30T19:33:31.357Z',
            to: '2023-01-30T20:33:31.357Z',
            raw: { from: 'now-1h', to: 'now' },
          },
          interval: '15s',
          intervalMs: 15000,
          targets: [
            {
              datasource: { type: 'prometheus' },
              editorMode: 'code',
              exemplar: false,
              expr: 'sum by(le) (rate(cortex_request_duration_seconds_bucket{cluster="dev-us-central-0", job="cortex-dev-01/cortex-gw-internal", namespace="cortex-dev-01"}[$__rate_interval]))',
              format: 'heatmap',
              legendFormat: '{{le}}',
              range: true,
              refId: 'A',
              requestId: '2A',
              utcOffsetSec: -21600,
            },
          ],
          maxDataPoints: 871,
          scopedVars: {
            __interval: { text: '15s', value: '15s' },
            __interval_ms: { text: '15000', value: 15000 },
          },
          startTime: 1675110811357,
          rangeRaw: { from: 'now-1h', to: 'now' },
        },
        dataFrame: {
          name: '0.005',
          refId: 'A',
          meta: {
            type: 'heatmap-rows',
            custom: { resultType: 'matrix' },
            executedQueryString:
              'Expr: sum by(le) (rate(cortex_request_duration_seconds_bucket{cluster="dev-us-central-0", job="cortex-dev-01/cortex-gw-internal", namespace="cortex-dev-01"}[1m0s]))\nStep: 15s',
          },
          fields: [
            {
              name: 'Time',
              type: 'time',
              typeInfo: { frame: 'time.Time' },
              config: { interval: 15000 },
              values: getMockTimeFrameArray(43, 1675110180000, 15000),
              entities: {},
            },
            {
              name: '0.005',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '0.005' },
              config: { displayNameFromDS: '0.005' },
              values: getMockValueFrameArray(43, 2.8, 5.86),
              entities: {},
            },
            {
              name: '0.01',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '0.01' },
              config: { displayNameFromDS: '0.01' },
              values: getMockValueFrameArray(43, 2.8, 5.86),
              entities: {},
            },
            {
              name: '0.025',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '0.025' },
              config: { displayNameFromDS: '0.025' },
              values: getMockValueFrameArray(43, 2.8, 5.86),
              entities: {},
            },
            {
              name: '0.05',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '0.05' },
              config: { displayNameFromDS: '0.05' },
              values: getMockValueFrameArray(43, 2.8, 5.86),
              entities: {},
            },
            {
              name: '0.1',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '0.1' },
              config: { displayNameFromDS: '0.1' },
              values: getMockValueFrameArray(43, 2.8, 5.86),
              entities: {},
            },
            {
              name: '0.25',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '0.25' },
              config: { displayNameFromDS: '0.25' },
              values: getMockValueFrameArray(43, 2.8, 5.86),
              entities: {},
            },
            {
              name: '0.5',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '0.5' },
              config: { displayNameFromDS: '0.5' },
              values: getMockValueFrameArray(43, 2.8, 5.86),
              entities: {},
            },
            {
              name: '1.0',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '1.0' },
              config: { displayNameFromDS: '1.0' },
              values: getMockValueFrameArray(43, 2.8, 5.86),
              entities: {},
            },
            {
              name: '2.5',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '2.5' },
              config: { displayNameFromDS: '2.5' },
              values: getMockValueFrameArray(43, 2.8, 5.86),
              entities: {},
            },
            {
              name: '5.0',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '5.0' },
              config: { displayNameFromDS: '5.0' },
              values: getMockValueFrameArray(43, 2.8, 5.86),
              entities: {},
            },
            {
              name: '10.0',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '10.0' },
              config: { displayNameFromDS: '10.0' },
              values: getMockValueFrameArray(43, 2.8, 5.86),
              entities: {},
            },
            {
              name: '25.0',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '25.0' },
              config: { displayNameFromDS: '25.0' },
              values: getMockValueFrameArray(43, 2.8, 5.86),
              entities: {},
            },
            {
              name: '50.0',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '50.0' },
              config: { displayNameFromDS: '50.0' },
              values: getMockValueFrameArray(43, 2.8, 5.86),
              entities: {},
            },
            {
              name: '100.0',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '100.0' },
              config: { displayNameFromDS: '100.0' },
              values: getMockValueFrameArray(43, 2.8, 5.86),
              entities: {},
            },
            {
              name: '+Inf',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '+Inf' },
              config: { displayNameFromDS: '+Inf' },
              values: getMockValueFrameArray(43, 2.8, 5.86),
              entities: {},
            },
          ],
          length: 43,
        },
        originalRange: mockOriginalRange('2023-01-30T19:33:31.357Z', '2023-01-30T20:33:31.357Z'),
        timeSrv: {
          from: '2023-01-30T19:33:31.498Z',
          to: '2023-01-30T20:33:31.498Z',
          raw: { from: 'now-1h', to: 'now' },
        },
      },
      third: {
        request: {
          range: {
            from: '2023-01-30T20:33:31.357Z',
            to: '2023-01-30T20:34:31.357Z',
            raw: { from: 'now-5m', to: 'now' },
          },
          interval: '15s',
          intervalMs: 15000,
          targets: [
            {
              datasource: { type: 'prometheus' },
              editorMode: 'code',
              exemplar: false,
              expr: 'sum by(le) (rate(cortex_request_duration_seconds_bucket{cluster="dev-us-central-0", job="cortex-dev-01/cortex-gw-internal", namespace="cortex-dev-01"}[$__rate_interval]))',
              format: 'heatmap',
              legendFormat: '{{le}}',
              range: true,
              refId: 'A',
              requestId: '2A',
              utcOffsetSec: -21600,
            },
          ],
          maxDataPoints: 871,
          scopedVars: {
            __interval: { text: '15s', value: '15s' },
            __interval_ms: { text: '15000', value: 15000 },
          },
          startTime: 1675110811357,
          rangeRaw: { from: 'now-1h', to: 'now' },
        },
        dataFrame: {
          name: '0.005',
          refId: 'A',
          meta: {
            type: 'heatmap-rows',
            custom: { resultType: 'matrix' },
            executedQueryString:
              'Expr: sum by(le) (rate(cortex_request_duration_seconds_bucket{cluster="dev-us-central-0", job="cortex-dev-01/cortex-gw-internal", namespace="cortex-dev-01"}[1m0s]))\nStep: 15s',
          },
          fields: [
            {
              name: 'Time',
              type: 'time',
              typeInfo: { frame: 'time.Time' },
              config: { interval: 15000 },
              values: getMockTimeFrameArray(20, 1675110810000, 15000),
              entities: {},
            },
            {
              name: '0.005',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '0.005' },
              config: { displayNameFromDS: '0.005' },
              values: getMockValueFrameArray(20, 4.3, 6.1),
              entities: {},
            },
            {
              name: '0.01',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '0.01' },
              config: { displayNameFromDS: '0.01' },
              values: getMockValueFrameArray(20, 4.3, 6.1),
              entities: {},
            },
            {
              name: '0.025',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '0.025' },
              config: { displayNameFromDS: '0.025' },
              values: getMockValueFrameArray(20, 4.3, 6.1),
              entities: {},
            },
            {
              name: '0.05',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '0.05' },
              config: { displayNameFromDS: '0.05' },
              values: getMockValueFrameArray(20, 4.3, 6.1),
              entities: {},
            },
            {
              name: '0.1',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '0.1' },
              config: { displayNameFromDS: '0.1' },
              values: getMockValueFrameArray(20, 4.3, 6.1),
              entities: {},
            },
            {
              name: '0.25',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '0.25' },
              config: { displayNameFromDS: '0.25' },
              values: getMockValueFrameArray(20, 4.3, 6.1),
              entities: {},
            },

            // Sometimes we don't always get new values, the preprocessing will need to back-fill any missing values
            {
              name: '0.5',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '0.5' },
              config: { displayNameFromDS: '0.5' },
              values: getMockValueFrameArray(10, 4.3, 6.1),
              entities: {},
            },
            {
              name: '1.0',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '1.0' },
              config: { displayNameFromDS: '1.0' },
              values: getMockValueFrameArray(20, 4.3, 6.1),
              entities: {},
            },
            {
              name: '2.5',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '2.5' },
              config: { displayNameFromDS: '2.5' },
              values: getMockValueFrameArray(20, 4.3, 6.1),
              entities: {},
            },
            {
              name: '5.0',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '5.0' },
              config: { displayNameFromDS: '5.0' },
              values: getMockValueFrameArray(20, 4.3, 6.1),
              entities: {},
            },
            {
              name: '10.0',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '10.0' },
              config: { displayNameFromDS: '10.0' },
              values: getMockValueFrameArray(20, 4.3, 6.1),
              entities: {},
            },
            {
              name: '25.0',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '25.0' },
              config: { displayNameFromDS: '25.0' },
              values: getMockValueFrameArray(10, 4.3, 6.1),
              entities: {},
            },
            {
              name: '50.0',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '50.0' },
              config: { displayNameFromDS: '50.0' },
              values: getMockValueFrameArray(20, 4.3, 6.1),
              entities: {},
            },
            {
              name: '100.0',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '100.0' },
              config: { displayNameFromDS: '100.0' },
              values: getMockValueFrameArray(20, 4.3, 6.1),
              entities: {},
            },
            {
              name: '+Inf',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '+Inf' },
              config: { displayNameFromDS: '+Inf' },
              values: getMockValueFrameArray(20, 4.3, 6.1),
              entities: {},
            },
          ],
          length: 43,
        },
        originalRange: {
          start: new Date('2023-01-30T20:29:31.357Z').valueOf(),
          end: new Date('2023-01-30T20:34:31.357Z').valueOf(),
          raw: { from: 'now-5m', to: 'now' },
        },
        timeSrv: {
          from: '2023-01-30T20:29:31.357Z',
          to: '2023-01-30T20:34:31.357Z',
          raw: { from: 'now-5m', to: 'now' },
        },
      },
    },
    noEvictionRequests: {
      first: {
        request: {
          app: 'panel-viewer',
          requestId: 'Q100',
          timezone: 'browser',
          panelId: 2,
          dashboardId: 884,
          dashboardUID: 'dtngicc4z',
          publicDashboardAccessToken: '',
          range: {
            from: moment('2023-01-30T18:07:08.558Z'),
            to: moment('2023-01-30T18:22:08.558Z'),
            raw: { from: 'now-15m', to: 'now' },
          },
          timeInfo: '',
          interval: '15s',
          intervalMs: 15000,
          targets: [
            {
              datasource: { type: 'prometheus', uid: 'OPQv8Kc4z' },
              editorMode: 'code',
              exemplar: false,
              expr: 'sum by(le) (rate(cortex_request_duration_seconds_bucket{cluster="dev-us-central-0", job="cortex-dev-01/cortex-gw-internal", namespace="cortex-dev-01"}[$__rate_interval]))',
              format: 'heatmap',
              legendFormat: '{{le}}',
              range: true,
              refId: 'A',
              requestId: '2A',
              utcOffsetSec: -21600,
            },
          ],
          maxDataPoints: 871,
          scopedVars: {
            __interval: { text: '15s', value: '15s' },
            __interval_ms: { text: '15000', value: 15000 },
          },
          startTime: 1675102928558,
          rangeRaw: { from: 'now-15m', to: 'now' },
        },
        dataFrame: {
          name: '0.005',
          refId: 'A',
          meta: {
            type: 'heatmap-rows',
            custom: { resultType: 'matrix' },
            executedQueryString:
              'Expr: sum by(le) (rate(cortex_request_duration_seconds_bucket{cluster="dev-us-central-0", job="cortex-dev-01/cortex-gw-internal", namespace="cortex-dev-01"}[1m0s]))\nStep: 15s',
          },
          fields: [
            {
              name: 'Time',
              type: 'time',
              typeInfo: { frame: 'time.Time' },
              config: { interval: 15000 },
              values: getMockTimeFrameArray(61, 1675102020000, 15000),
              entities: {},
            },
            {
              name: '0.005',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '0.005' },
              config: { displayNameFromDS: '0.005' },
              values: getMockValueFrameArray(61, 2.8, 5.6),
              entities: {},
            },
            {
              name: '0.01',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '0.01' },
              config: { displayNameFromDS: '0.01' },
              values: getMockValueFrameArray(61, 2.8, 5.6),
              entities: {},
            },
            {
              name: '0.025',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '0.025' },
              config: { displayNameFromDS: '0.025' },
              values: getMockValueFrameArray(61, 2.8, 5.6),
              entities: {},
            },
            {
              name: '0.05',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '0.05' },
              config: { displayNameFromDS: '0.05' },
              values: getMockValueFrameArray(61, 2.8, 5.6),
              entities: {},
            },
            {
              name: '0.1',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '0.1' },
              config: { displayNameFromDS: '0.1' },
              values: getMockValueFrameArray(61, 2.8, 5.6),
              entities: {},
            },
            {
              name: '0.25',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '0.25' },
              config: { displayNameFromDS: '0.25' },
              values: getMockValueFrameArray(61, 2.8, 5.6),
              entities: {},
            },
            {
              name: '0.5',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '0.5' },
              config: { displayNameFromDS: '0.5' },
              values: getMockValueFrameArray(61, 2.8, 5.6),
              entities: {},
            },
            {
              name: '1.0',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '1.0' },
              config: { displayNameFromDS: '1.0' },
              values: getMockValueFrameArray(61, 2.8, 5.6),
              entities: {},
            },
            {
              name: '2.5',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '2.5' },
              config: { displayNameFromDS: '2.5' },
              values: getMockValueFrameArray(61, 2.8, 5.6),
              entities: {},
            },
            {
              name: '5.0',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '5.0' },
              config: { displayNameFromDS: '5.0' },
              values: getMockValueFrameArray(61, 2.8, 5.6),
              entities: {},
            },
            {
              name: '10.0',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '10.0' },
              config: { displayNameFromDS: '10.0' },
              values: getMockValueFrameArray(61, 2.8, 5.6),
              entities: {},
            },
            {
              name: '25.0',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '25.0' },
              config: { displayNameFromDS: '25.0' },
              values: getMockValueFrameArray(61, 2.8, 5.6),
              entities: {},
            },
            {
              name: '50.0',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '50.0' },
              config: { displayNameFromDS: '50.0' },
              values: getMockValueFrameArray(61, 2.8, 5.6),
              entities: {},
            },
            {
              name: '100.0',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '100.0' },
              config: { displayNameFromDS: '100.0' },
              values: getMockValueFrameArray(61, 2.8, 5.6),
              entities: {},
            },
            {
              name: '+Inf',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '+Inf' },
              config: { displayNameFromDS: '+Inf' },
              values: getMockValueFrameArray(61, 2.8, 5.6),
              entities: {},
            },
          ],
          length: 61,
        },
        originalRange: undefined,
        timeSrv: {
          from: '2023-01-30T18:07:08.774Z',
          to: '2023-01-30T18:22:08.774Z',
          raw: { from: 'now-15m', to: 'now' },
        },
      },
      second: {
        request: {
          app: 'panel-viewer',
          requestId: 'Q101',
          timezone: 'browser',
          panelId: 2,
          dashboardId: 884,
          dashboardUID: 'dtngicc4z',
          publicDashboardAccessToken: '',
          range: {
            from: moment('2023-01-30T18:07:15.962Z'),
            to: moment('2023-01-30T18:22:15.962Z'),
            raw: { from: 'now-15m', to: 'now' },
          },
          timeInfo: '',
          interval: '15s',
          intervalMs: 15000,
          targets: [
            {
              datasource: { type: 'prometheus', uid: 'OPQv8Kc4z' },
              editorMode: 'code',
              exemplar: false,
              expr: 'sum by(le) (rate(cortex_request_duration_seconds_bucket{cluster="dev-us-central-0", job="cortex-dev-01/cortex-gw-internal", namespace="cortex-dev-01"}[$__rate_interval]))',
              format: 'heatmap',
              legendFormat: '{{le}}',
              range: true,
              refId: 'A',
              requestId: '2A',
              utcOffsetSec: -21600,
            },
          ],
          maxDataPoints: 871,
          scopedVars: { __interval: { text: '15s', value: '15s' }, __interval_ms: { text: '15000', value: 15000 } },
          startTime: 1675102935962,
          rangeRaw: { from: 'now-15m', to: 'now' },
        },
        dataFrame: {
          name: '0.005',
          refId: 'A',
          meta: {
            type: 'heatmap-rows',
            custom: { resultType: 'matrix' },
            executedQueryString:
              'Expr: sum by(le) (rate(cortex_request_duration_seconds_bucket{cluster="dev-us-central-0", job="cortex-dev-01/cortex-gw-internal", namespace="cortex-dev-01"}[1m0s]))\nStep: 15s',
          },
          fields: [
            {
              name: 'Time',
              type: 'time',
              typeInfo: { frame: 'time.Time' },
              config: { interval: 15000 },
              values: getMockTimeFrameArray(42, 1675102320000, 15000),
              entities: {},
            },
            {
              name: '0.005',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '0.005' },
              config: { displayNameFromDS: '0.005' },
              values: getMockValueFrameArray(42, 2.8, 5.86),
              entities: {},
            },
            {
              name: '0.01',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '0.01' },
              config: { displayNameFromDS: '0.01' },
              values: getMockValueFrameArray(42, 3.5, 7.6),
              entities: {},
            },
            {
              name: '0.025',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '0.025' },
              config: { displayNameFromDS: '0.025' },
              values: getMockValueFrameArray(42, 1.3, 2.3),
              entities: {},
            },
          ],
          length: 42,
        },
        timeSrv: {
          from: '2023-01-30T18:07:16.084Z',
          to: '2023-01-30T18:22:16.084Z',
          raw: { from: 'now-15m', to: 'now' },
        },
        originalRange: {
          start: new Date('2022-01-30T18:07:22.155Z').valueOf(),
          end: new Date('2024-01-30T18:22:22.155Z').valueOf(),
          raw: { from: 'now-15m', to: 'now' },
        },
      },
      third: {
        request: {
          app: 'panel-viewer',
          requestId: 'Q102',
          timezone: 'browser',
          panelId: 2,
          dashboardId: 884,
          dashboardUID: 'dtngicc4z',
          publicDashboardAccessToken: '',
          range: {
            from: moment('2023-01-30T18:07:22.155Z'),
            to: moment('2023-01-30T18:22:22.155Z'),
            raw: { from: 'now-15m', to: 'now' },
          },
          timeInfo: '',
          interval: '15s',
          intervalMs: 15000,
          targets: [
            {
              datasource: { type: 'prometheus', uid: 'OPQv8Kc4z' },
              editorMode: 'code',
              exemplar: false,
              expr: 'sum by(le) (rate(cortex_request_duration_seconds_bucket{cluster="dev-us-central-0", job="cortex-dev-01/cortex-gw-internal", namespace="cortex-dev-01"}[$__rate_interval]))',
              format: 'heatmap',
              legendFormat: '{{le}}',
              range: true,
              refId: 'A',
              requestId: '2A',
              utcOffsetSec: -21600,
            },
          ],
          maxDataPoints: 871,
          scopedVars: { __interval: { text: '15s', value: '15s' }, __interval_ms: { text: '15000', value: 15000 } },
          startTime: 1675102942155,
          rangeRaw: { from: 'now-15m', to: 'now' },
        },
        dataFrame: {
          name: '0.005',
          refId: 'A',
          meta: {
            type: 'heatmap-rows',
            custom: { resultType: 'matrix' },
            executedQueryString:
              'Expr: sum by(le) (rate(cortex_request_duration_seconds_bucket{cluster="dev-us-central-0", job="cortex-dev-01/cortex-gw-internal", namespace="cortex-dev-01"}[1m0s]))\nStep: 15s',
          },
          fields: [
            {
              name: 'Time',
              type: 'time',
              typeInfo: { frame: 'time.Time' },
              config: { interval: 15000 },
              values: getMockTimeFrameArray(42, 1675102320000, 15000),
              entities: {},
            },
            {
              name: '0.005',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '0.005' },
              config: { displayNameFromDS: '0.005' },
              values: getMockValueFrameArray(42, 2.8, 6.1),
              entities: {},
            },
            {
              name: '0.01',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '0.01' },
              config: { displayNameFromDS: '0.01' },
              values: getMockValueFrameArray(42, 2.8, 6.1),
              entities: {},
            },
            {
              name: '0.025',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '0.025' },
              config: { displayNameFromDS: '0.025' },
              values: getMockValueFrameArray(42, 2.8, 6.1),
              entities: {},
            },
            {
              name: '0.05',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '0.05' },
              config: { displayNameFromDS: '0.05' },
              values: getMockValueFrameArray(42, 2.8, 6.1),
              entities: {},
            },
            {
              name: '0.1',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '0.1' },
              config: { displayNameFromDS: '0.1' },
              values: getMockValueFrameArray(42, 2.8, 6.1),
              entities: {},
            },
            {
              name: '0.25',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '0.25' },
              config: { displayNameFromDS: '0.25' },
              values: getMockValueFrameArray(42, 2.8, 6.1),
              entities: {},
            },
            {
              name: '0.5',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '0.5' },
              config: { displayNameFromDS: '0.5' },
              values: getMockValueFrameArray(42, 2.8, 6.1),
              entities: {},
            },
            {
              name: '1.0',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '1.0' },
              config: { displayNameFromDS: '1.0' },
              values: getMockValueFrameArray(42, 2.8, 6.1),
              entities: {},
            },
            {
              name: '2.5',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '2.5' },
              config: { displayNameFromDS: '2.5' },
              values: getMockValueFrameArray(42, 2.8, 6.1),
              entities: {},
            },
            {
              name: '5.0',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '5.0' },
              config: { displayNameFromDS: '5.0' },
              values: getMockValueFrameArray(42, 2.8, 6.1),
              entities: {},
            },
            {
              name: '10.0',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '10.0' },
              config: { displayNameFromDS: '10.0' },
              values: getMockValueFrameArray(42, 2.8, 6.1),
              entities: {},
            },
            {
              name: '25.0',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '25.0' },
              config: { displayNameFromDS: '25.0' },
              values: getMockValueFrameArray(42, 2.8, 6.1),
              entities: {},
            },
            {
              name: '50.0',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '50.0' },
              config: { displayNameFromDS: '50.0' },
              values: getMockValueFrameArray(42, 2.8, 6.1),
              entities: {},
            },
            {
              name: '100.0',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '100.0' },
              config: { displayNameFromDS: '100.0' },
              values: getMockValueFrameArray(42, 2.8, 6.1),
              entities: {},
            },
            {
              name: '+Inf',
              type: 'number',
              typeInfo: { frame: 'float64' },
              labels: { le: '+Inf' },
              config: { displayNameFromDS: '+Inf' },
              values: getMockValueFrameArray(42, 2.8, 6.1),
              entities: {},
            },
          ],
          length: 42,
        },
        originalRange: {
          start: new Date('2022-01-30T18:07:22.155Z').valueOf(),
          end: new Date('2024-01-30T18:22:22.155Z').valueOf(),
          raw: { from: 'now-15m', to: 'now' },
        },
        timeSrv: {
          from: '2023-01-30T18:07:22.341Z',
          to: '2023-01-30T18:22:22.341Z',
          raw: { from: 'now-15m', to: 'now' },
        },
      },
    },
  },
};
