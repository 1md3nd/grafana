{
  "$schema": "https://raw.githubusercontent.com/OAI/OpenAPI-Specification/main/schemas/v3.0/schema.json",
  "openapi": "3.0.0",
  "info": {
    "description": "Generates test data in different forms",
    "title": "testdata.datasource.grafana.app/v0alpha1",
    "version": "11.1.0-pre"
  },
  "paths": {
    "/apis/testdata.datasource.grafana.app/v0alpha1/": {
      "get": {
        "tags": ["API Discovery"],
        "description": "get available resources",
        "operationId": "getAPIResources",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList" }
              },
              "application/vnd.kubernetes.protobuf": {
                "schema": { "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList" }
              },
              "application/yaml": {
                "schema": { "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList" }
              }
            }
          }
        }
      }
    },
    "/apis/testdata.datasource.grafana.app/v0alpha1/namespaces/{namespace}/connections": {
      "get": {
        "tags": ["DataSourceConnection"],
        "description": "list objects of kind DataSourceConnection",
        "operationId": "listNamespacedDataSourceConnection",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.github.grafana.grafana.pkg.apis.datasource.v0alpha1.DataSourceConnectionList"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "$ref": "#/components/schemas/com.github.grafana.grafana.pkg.apis.datasource.v0alpha1.DataSourceConnectionList"
                }
              },
              "application/vnd.kubernetes.protobuf": {
                "schema": {
                  "$ref": "#/components/schemas/com.github.grafana.grafana.pkg.apis.datasource.v0alpha1.DataSourceConnectionList"
                }
              },
              "application/vnd.kubernetes.protobuf;stream=watch": {
                "schema": {
                  "$ref": "#/components/schemas/com.github.grafana.grafana.pkg.apis.datasource.v0alpha1.DataSourceConnectionList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/com.github.grafana.grafana.pkg.apis.datasource.v0alpha1.DataSourceConnectionList"
                }
              }
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "testdata.datasource.grafana.app",
          "version": "v0alpha1",
          "kind": "DataSourceConnection"
        }
      },
      "parameters": [
        {
          "name": "allowWatchBookmarks",
          "in": "query",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "schema": { "type": "boolean", "uniqueItems": true }
        },
        {
          "name": "continue",
          "in": "query",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "schema": { "type": "string", "uniqueItems": true }
        },
        {
          "name": "fieldSelector",
          "in": "query",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "schema": { "type": "string", "uniqueItems": true }
        },
        {
          "name": "labelSelector",
          "in": "query",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "schema": { "type": "string", "uniqueItems": true }
        },
        {
          "name": "limit",
          "in": "query",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "schema": { "type": "integer", "uniqueItems": true }
        },
        {
          "name": "namespace",
          "in": "path",
          "description": "object name and auth scope, such as for teams and projects",
          "required": true,
          "schema": { "type": "string", "uniqueItems": true }
        },
        {
          "name": "pretty",
          "in": "query",
          "description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
          "schema": { "type": "string", "uniqueItems": true }
        },
        {
          "name": "resourceVersion",
          "in": "query",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "schema": { "type": "string", "uniqueItems": true }
        },
        {
          "name": "resourceVersionMatch",
          "in": "query",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "schema": { "type": "string", "uniqueItems": true }
        },
        {
          "name": "sendInitialEvents",
          "in": "query",
          "description": "`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.",
          "schema": { "type": "boolean", "uniqueItems": true }
        },
        {
          "name": "timeoutSeconds",
          "in": "query",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "schema": { "type": "integer", "uniqueItems": true }
        },
        {
          "name": "watch",
          "in": "query",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "schema": { "type": "boolean", "uniqueItems": true }
        }
      ]
    },
    "/apis/testdata.datasource.grafana.app/v0alpha1/namespaces/{namespace}/connections/{name}": {
      "get": {
        "tags": ["DataSourceConnection"],
        "description": "read the specified DataSourceConnection",
        "operationId": "readNamespacedDataSourceConnection",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.github.grafana.grafana.pkg.apis.datasource.v0alpha1.DataSourceConnection"
                }
              },
              "application/vnd.kubernetes.protobuf": {
                "schema": {
                  "$ref": "#/components/schemas/com.github.grafana.grafana.pkg.apis.datasource.v0alpha1.DataSourceConnection"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/com.github.grafana.grafana.pkg.apis.datasource.v0alpha1.DataSourceConnection"
                }
              }
            }
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "testdata.datasource.grafana.app",
          "version": "v0alpha1",
          "kind": "DataSourceConnection"
        }
      },
      "parameters": [
        {
          "name": "name",
          "in": "path",
          "description": "name of the DataSourceConnection",
          "required": true,
          "schema": { "type": "string", "uniqueItems": true }
        },
        {
          "name": "namespace",
          "in": "path",
          "description": "object name and auth scope, such as for teams and projects",
          "required": true,
          "schema": { "type": "string", "uniqueItems": true }
        },
        {
          "name": "pretty",
          "in": "query",
          "description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
          "schema": { "type": "string", "uniqueItems": true }
        }
      ]
    },
    "/apis/testdata.datasource.grafana.app/v0alpha1/namespaces/{namespace}/connections/{name}/health": {
      "get": {
        "tags": ["DataSourceConnection"],
        "description": "connect GET requests to health of DataSourceConnection",
        "operationId": "connectGetNamespacedDataSourceConnectionHealth",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/com.github.grafana.grafana.pkg.apis.datasource.v0alpha1.HealthCheckResult"
                }
              }
            }
          }
        },
        "x-kubernetes-action": "connect",
        "x-kubernetes-group-version-kind": {
          "group": "testdata.datasource.grafana.app",
          "version": "v0alpha1",
          "kind": "HealthCheckResult"
        }
      },
      "parameters": [
        {
          "name": "name",
          "in": "path",
          "description": "name of the HealthCheckResult",
          "required": true,
          "schema": { "type": "string", "uniqueItems": true }
        },
        {
          "name": "namespace",
          "in": "path",
          "description": "object name and auth scope, such as for teams and projects",
          "required": true,
          "schema": { "type": "string", "uniqueItems": true }
        }
      ]
    },
    "/apis/testdata.datasource.grafana.app/v0alpha1/namespaces/{namespace}/connections/{name}/query": {
      "post": {
        "tags": ["DataSourceConnection"],
        "description": "Execute queries",
        "operationId": "connectPostNamespacedDataSourceConnectionQuery",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/QueryRequestSchema" },
              "examples": {
                "pulse wave example-1": {
                  "summary": "pulse wave example",
                  "value": {
                    "from": "now-1h",
                    "to": "now",
                    "queries": [
                      {
                        "refId": "A",
                        "maxDataPoints": 1000,
                        "intervalMs": 5000,
                        "pulseWave": {
                          "offCount": 20,
                          "offValue": 1.23,
                          "onCount": 10,
                          "onValue": 4.56,
                          "timeStep": 1000
                        },
                        "scenarioId": "predictable_pulse"
                      }
                    ],
                    "debug": false
                  }
                },
                "simple random walk-0": {
                  "summary": "simple random walk",
                  "value": {
                    "from": "now-1h",
                    "to": "now",
                    "queries": [
                      { "refId": "A", "maxDataPoints": 1000, "intervalMs": 5000, "scenarioId": "random_walk" }
                    ],
                    "debug": false
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/com.github.grafana.grafana.pkg.apis.query.v0alpha1.QueryDataResponse"
                }
              }
            }
          },
          "207": {
            "description": "Query executed, but errors may exist in the datasource.  See the payload for more details.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/com.github.grafana.grafana.pkg.apis.query.v0alpha1.QueryDataResponse"
                }
              }
            }
          }
        },
        "x-kubernetes-action": "connect",
        "x-kubernetes-group-version-kind": {
          "group": "testdata.datasource.grafana.app",
          "version": "v0alpha1",
          "kind": "QueryDataResponse"
        }
      },
      "parameters": [
        {
          "name": "name",
          "in": "path",
          "description": "name of the QueryDataResponse",
          "required": true,
          "schema": { "type": "string", "uniqueItems": true }
        },
        {
          "name": "namespace",
          "in": "path",
          "description": "object name and auth scope, such as for teams and projects",
          "required": true,
          "schema": { "type": "string", "uniqueItems": true }
        }
      ]
    },
    "/apis/testdata.datasource.grafana.app/v0alpha1/namespaces/{namespace}/connections/{name}/resource": {
      "get": {
        "tags": ["DataSourceConnection"],
        "description": "connect GET requests to resource of DataSourceConnection",
        "operationId": "connectGetNamespacedDataSourceConnectionResource",
        "responses": { "200": { "description": "OK", "content": { "*/*": { "schema": { "type": "string" } } } } },
        "x-kubernetes-action": "connect",
        "x-kubernetes-group-version-kind": {
          "group": "testdata.datasource.grafana.app",
          "version": "v0alpha1",
          "kind": "Status"
        }
      },
      "put": {
        "tags": ["DataSourceConnection"],
        "description": "connect PUT requests to resource of DataSourceConnection",
        "operationId": "connectPutNamespacedDataSourceConnectionResource",
        "responses": { "200": { "description": "OK", "content": { "*/*": { "schema": { "type": "string" } } } } },
        "x-kubernetes-action": "connect",
        "x-kubernetes-group-version-kind": {
          "group": "testdata.datasource.grafana.app",
          "version": "v0alpha1",
          "kind": "Status"
        }
      },
      "post": {
        "tags": ["DataSourceConnection"],
        "description": "connect POST requests to resource of DataSourceConnection",
        "operationId": "connectPostNamespacedDataSourceConnectionResource",
        "responses": { "200": { "description": "OK", "content": { "*/*": { "schema": { "type": "string" } } } } },
        "x-kubernetes-action": "connect",
        "x-kubernetes-group-version-kind": {
          "group": "testdata.datasource.grafana.app",
          "version": "v0alpha1",
          "kind": "Status"
        }
      },
      "delete": {
        "tags": ["DataSourceConnection"],
        "description": "connect DELETE requests to resource of DataSourceConnection",
        "operationId": "connectDeleteNamespacedDataSourceConnectionResource",
        "responses": { "200": { "description": "OK", "content": { "*/*": { "schema": { "type": "string" } } } } },
        "x-kubernetes-action": "connect",
        "x-kubernetes-group-version-kind": {
          "group": "testdata.datasource.grafana.app",
          "version": "v0alpha1",
          "kind": "Status"
        }
      },
      "options": {
        "tags": ["DataSourceConnection"],
        "description": "connect OPTIONS requests to resource of DataSourceConnection",
        "operationId": "connectOptionsNamespacedDataSourceConnectionResource",
        "responses": { "200": { "description": "OK", "content": { "*/*": { "schema": { "type": "string" } } } } },
        "x-kubernetes-action": "connect",
        "x-kubernetes-group-version-kind": {
          "group": "testdata.datasource.grafana.app",
          "version": "v0alpha1",
          "kind": "Status"
        }
      },
      "head": {
        "tags": ["DataSourceConnection"],
        "description": "connect HEAD requests to resource of DataSourceConnection",
        "operationId": "connectHeadNamespacedDataSourceConnectionResource",
        "responses": { "200": { "description": "OK", "content": { "*/*": { "schema": { "type": "string" } } } } },
        "x-kubernetes-action": "connect",
        "x-kubernetes-group-version-kind": {
          "group": "testdata.datasource.grafana.app",
          "version": "v0alpha1",
          "kind": "Status"
        }
      },
      "patch": {
        "tags": ["DataSourceConnection"],
        "description": "connect PATCH requests to resource of DataSourceConnection",
        "operationId": "connectPatchNamespacedDataSourceConnectionResource",
        "responses": { "200": { "description": "OK", "content": { "*/*": { "schema": { "type": "string" } } } } },
        "x-kubernetes-action": "connect",
        "x-kubernetes-group-version-kind": {
          "group": "testdata.datasource.grafana.app",
          "version": "v0alpha1",
          "kind": "Status"
        }
      },
      "parameters": [
        {
          "name": "name",
          "in": "path",
          "description": "name of the Status",
          "required": true,
          "schema": { "type": "string", "uniqueItems": true }
        },
        {
          "name": "namespace",
          "in": "path",
          "description": "object name and auth scope, such as for teams and projects",
          "required": true,
          "schema": { "type": "string", "uniqueItems": true }
        }
      ]
    },
    "/apis/testdata.datasource.grafana.app/v0alpha1/namespaces/{namespace}/connections/{name}/resource/{path}": {
      "get": {
        "tags": ["DataSourceConnection"],
        "description": "connect GET requests to resource of DataSourceConnection",
        "operationId": "connectGetNamespacedDataSourceConnectionResourceWithPath",
        "responses": { "200": { "description": "OK", "content": { "*/*": { "schema": { "type": "string" } } } } },
        "x-kubernetes-action": "connect",
        "x-kubernetes-group-version-kind": {
          "group": "testdata.datasource.grafana.app",
          "version": "v0alpha1",
          "kind": "Status"
        }
      },
      "put": {
        "tags": ["DataSourceConnection"],
        "description": "connect PUT requests to resource of DataSourceConnection",
        "operationId": "connectPutNamespacedDataSourceConnectionResourceWithPath",
        "responses": { "200": { "description": "OK", "content": { "*/*": { "schema": { "type": "string" } } } } },
        "x-kubernetes-action": "connect",
        "x-kubernetes-group-version-kind": {
          "group": "testdata.datasource.grafana.app",
          "version": "v0alpha1",
          "kind": "Status"
        }
      },
      "post": {
        "tags": ["DataSourceConnection"],
        "description": "connect POST requests to resource of DataSourceConnection",
        "operationId": "connectPostNamespacedDataSourceConnectionResourceWithPath",
        "responses": { "200": { "description": "OK", "content": { "*/*": { "schema": { "type": "string" } } } } },
        "x-kubernetes-action": "connect",
        "x-kubernetes-group-version-kind": {
          "group": "testdata.datasource.grafana.app",
          "version": "v0alpha1",
          "kind": "Status"
        }
      },
      "delete": {
        "tags": ["DataSourceConnection"],
        "description": "connect DELETE requests to resource of DataSourceConnection",
        "operationId": "connectDeleteNamespacedDataSourceConnectionResourceWithPath",
        "responses": { "200": { "description": "OK", "content": { "*/*": { "schema": { "type": "string" } } } } },
        "x-kubernetes-action": "connect",
        "x-kubernetes-group-version-kind": {
          "group": "testdata.datasource.grafana.app",
          "version": "v0alpha1",
          "kind": "Status"
        }
      },
      "options": {
        "tags": ["DataSourceConnection"],
        "description": "connect OPTIONS requests to resource of DataSourceConnection",
        "operationId": "connectOptionsNamespacedDataSourceConnectionResourceWithPath",
        "responses": { "200": { "description": "OK", "content": { "*/*": { "schema": { "type": "string" } } } } },
        "x-kubernetes-action": "connect",
        "x-kubernetes-group-version-kind": {
          "group": "testdata.datasource.grafana.app",
          "version": "v0alpha1",
          "kind": "Status"
        }
      },
      "head": {
        "tags": ["DataSourceConnection"],
        "description": "connect HEAD requests to resource of DataSourceConnection",
        "operationId": "connectHeadNamespacedDataSourceConnectionResourceWithPath",
        "responses": { "200": { "description": "OK", "content": { "*/*": { "schema": { "type": "string" } } } } },
        "x-kubernetes-action": "connect",
        "x-kubernetes-group-version-kind": {
          "group": "testdata.datasource.grafana.app",
          "version": "v0alpha1",
          "kind": "Status"
        }
      },
      "patch": {
        "tags": ["DataSourceConnection"],
        "description": "connect PATCH requests to resource of DataSourceConnection",
        "operationId": "connectPatchNamespacedDataSourceConnectionResourceWithPath",
        "responses": { "200": { "description": "OK", "content": { "*/*": { "schema": { "type": "string" } } } } },
        "x-kubernetes-action": "connect",
        "x-kubernetes-group-version-kind": {
          "group": "testdata.datasource.grafana.app",
          "version": "v0alpha1",
          "kind": "Status"
        }
      },
      "parameters": [
        {
          "name": "name",
          "in": "path",
          "description": "name of the Status",
          "required": true,
          "schema": { "type": "string", "uniqueItems": true }
        },
        {
          "name": "namespace",
          "in": "path",
          "description": "object name and auth scope, such as for teams and projects",
          "required": true,
          "schema": { "type": "string", "uniqueItems": true }
        },
        {
          "name": "path",
          "in": "path",
          "description": "path to the resource",
          "required": true,
          "schema": { "type": "string", "uniqueItems": true }
        }
      ]
    },
    "/apis/testdata.datasource.grafana.app/v0alpha1/querytypes": {
      "get": {
        "tags": ["QueryTypeDefinition"],
        "description": "list objects of kind QueryTypeDefinition",
        "operationId": "listQueryTypeDefinition",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.github.grafana.grafana.pkg.apis.query.v0alpha1.QueryTypeDefinitionList"
                }
              },
              "application/json;stream=watch": {
                "schema": {
                  "$ref": "#/components/schemas/com.github.grafana.grafana.pkg.apis.query.v0alpha1.QueryTypeDefinitionList"
                }
              },
              "application/vnd.kubernetes.protobuf": {
                "schema": {
                  "$ref": "#/components/schemas/com.github.grafana.grafana.pkg.apis.query.v0alpha1.QueryTypeDefinitionList"
                }
              },
              "application/vnd.kubernetes.protobuf;stream=watch": {
                "schema": {
                  "$ref": "#/components/schemas/com.github.grafana.grafana.pkg.apis.query.v0alpha1.QueryTypeDefinitionList"
                }
              },
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/com.github.grafana.grafana.pkg.apis.query.v0alpha1.QueryTypeDefinitionList"
                }
              }
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "testdata.datasource.grafana.app",
          "version": "v0alpha1",
          "kind": "QueryTypeDefinition"
        }
      },
      "parameters": [
        {
          "name": "allowWatchBookmarks",
          "in": "query",
          "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
          "schema": { "type": "boolean", "uniqueItems": true }
        },
        {
          "name": "continue",
          "in": "query",
          "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
          "schema": { "type": "string", "uniqueItems": true }
        },
        {
          "name": "fieldSelector",
          "in": "query",
          "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
          "schema": { "type": "string", "uniqueItems": true }
        },
        {
          "name": "labelSelector",
          "in": "query",
          "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
          "schema": { "type": "string", "uniqueItems": true }
        },
        {
          "name": "limit",
          "in": "query",
          "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
          "schema": { "type": "integer", "uniqueItems": true }
        },
        {
          "name": "pretty",
          "in": "query",
          "description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
          "schema": { "type": "string", "uniqueItems": true }
        },
        {
          "name": "resourceVersion",
          "in": "query",
          "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "schema": { "type": "string", "uniqueItems": true }
        },
        {
          "name": "resourceVersionMatch",
          "in": "query",
          "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
          "schema": { "type": "string", "uniqueItems": true }
        },
        {
          "name": "sendInitialEvents",
          "in": "query",
          "description": "`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.",
          "schema": { "type": "boolean", "uniqueItems": true }
        },
        {
          "name": "timeoutSeconds",
          "in": "query",
          "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
          "schema": { "type": "integer", "uniqueItems": true }
        },
        {
          "name": "watch",
          "in": "query",
          "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
          "schema": { "type": "boolean", "uniqueItems": true }
        }
      ]
    }
  },
  "components": {
    "schemas": {
      "QueryRequestSchema": {
        "description": "Schema for a set of queries sent to the query method",
        "type": "object",
        "required": ["queries"],
        "properties": {
          "$schema": { "description": "helper", "type": "string" },
          "debug": { "type": "boolean" },
          "from": {
            "description": "From Start time in epoch timestamps in milliseconds or relative using Grafana time units.",
            "type": "string"
          },
          "queries": {
            "type": "array",
            "items": {
              "description": "TestDataQuery defines model for TestDataQuery.",
              "type": "object",
              "properties": {
                "alias": { "type": "string" },
                "channel": { "description": "Used for live query", "type": "string" },
                "csvContent": { "type": "string" },
                "csvFileName": { "type": "string" },
                "csvWave": {
                  "type": "array",
                  "items": {
                    "description": "CSVWave defines model for CSVWave.",
                    "type": "object",
                    "properties": {
                      "labels": { "type": "string" },
                      "name": { "type": "string" },
                      "timeStep": { "type": "integer" },
                      "valuesCSV": { "type": "string" }
                    },
                    "additionalProperties": false
                  }
                },
                "datasource": {
                  "description": "The datasource",
                  "type": "object",
                  "required": ["type"],
                  "properties": {
                    "type": {
                      "description": "The datasource plugin type",
                      "type": "string",
                      "pattern": "^grafana-testdata-datasource$|^testdata$"
                    },
                    "uid": { "description": "Datasource UID", "type": "string" }
                  },
                  "additionalProperties": false
                },
                "dropPercent": {
                  "description": "Drop percentage (the chance we will lose a point 0-100)",
                  "type": "number"
                },
                "errorType": {
                  "description": "Possible enum values:\n - `\"frontend_exception\"` \n - `\"frontend_observable\"` \n - `\"server_panic\"` ",
                  "type": "string",
                  "enum": ["frontend_exception", "frontend_observable", "server_panic"],
                  "x-enum-description": {}
                },
                "flamegraphDiff": { "type": "boolean" },
                "hide": {
                  "description": "true if query is disabled (ie should not be returned to the dashboard)\nNOTE: this does not always imply that the query should not be executed since\nthe results from a hidden query may be used as the input to other queries (SSE etc)",
                  "type": "boolean"
                },
                "intervalMs": {
                  "description": "Interval is the suggested duration between time points in a time series query.\nNOTE: the values for intervalMs is not saved in the query model.  It is typically calculated\nfrom the interval required to fill a pixels in the visualization",
                  "type": "number"
                },
                "labels": { "type": "string" },
                "levelColumn": { "type": "boolean" },
                "lines": { "type": "integer" },
                "max": { "type": "number" },
                "maxDataPoints": {
                  "description": "MaxDataPoints is the maximum number of data points that should be returned from a time series query.\nNOTE: the values for maxDataPoints is not saved in the query model.  It is typically calculated\nfrom the number of pixels visible in a visualization",
                  "type": "integer"
                },
                "min": { "type": "number" },
                "nodes": {
                  "type": "object",
                  "properties": {
                    "count": { "type": "integer" },
                    "seed": { "type": "integer" },
                    "type": {
                      "description": "Possible enum values:\n - `\"random\"` \n - `\"random edges\"` \n - `\"response_medium\"` \n - `\"response_small\"` \n - `\"feature_showcase\"` ",
                      "type": "string",
                      "enum": ["random", "random edges", "response_medium", "response_small", "feature_showcase"],
                      "x-enum-description": {}
                    }
                  },
                  "additionalProperties": false
                },
                "noise": { "type": "number" },
                "points": { "type": "array", "items": { "type": "array" } },
                "pulseWave": {
                  "type": "object",
                  "properties": {
                    "offCount": { "type": "integer" },
                    "offValue": { "type": "number" },
                    "onCount": { "type": "integer" },
                    "onValue": { "type": "number" },
                    "timeStep": { "type": "integer" }
                  },
                  "additionalProperties": false
                },
                "queryType": {
                  "description": "QueryType is an optional identifier for the type of query.\nIt can be used to distinguish different types of queries.",
                  "type": "string"
                },
                "rawFrameContent": { "type": "string" },
                "refId": {
                  "description": "RefID is the unique identifier of the query, set by the frontend call.",
                  "type": "string"
                },
                "resultAssertions": {
                  "description": "Optionally define expected query result behavior",
                  "type": "object",
                  "required": ["typeVersion"],
                  "properties": {
                    "maxFrames": { "description": "Maximum frame count", "type": "integer" },
                    "type": {
                      "description": "Type asserts that the frame matches a known type structure.\n\n\nPossible enum values:\n - `\"\"` \n - `\"timeseries-wide\"` \n - `\"timeseries-long\"` \n - `\"timeseries-many\"` \n - `\"timeseries-multi\"` \n - `\"directory-listing\"` \n - `\"table\"` \n - `\"numeric-wide\"` \n - `\"numeric-multi\"` \n - `\"numeric-long\"` \n - `\"log-lines\"` ",
                      "type": "string",
                      "enum": [
                        "",
                        "timeseries-wide",
                        "timeseries-long",
                        "timeseries-many",
                        "timeseries-multi",
                        "directory-listing",
                        "table",
                        "numeric-wide",
                        "numeric-multi",
                        "numeric-long",
                        "log-lines"
                      ],
                      "x-enum-description": {}
                    },
                    "typeVersion": {
                      "description": "TypeVersion is the version of the Type property. Versions greater than 0.0 correspond to the dataplane\ncontract documentation https://grafana.github.io/dataplane/contract/.",
                      "type": "array",
                      "maxItems": 2,
                      "minItems": 2,
                      "items": { "type": "integer" }
                    }
                  },
                  "additionalProperties": false
                },
                "scenarioId": {
                  "description": "Possible enum values:\n - `\"annotations\"` \n - `\"arrow\"` \n - `\"csv_content\"` \n - `\"csv_file\"` \n - `\"csv_metric_values\"` \n - `\"datapoints_outside_range\"` \n - `\"exponential_heatmap_bucket_data\"` \n - `\"flame_graph\"` \n - `\"grafana_api\"` \n - `\"linear_heatmap_bucket_data\"` \n - `\"live\"` \n - `\"logs\"` \n - `\"manual_entry\"` \n - `\"no_data_points\"` \n - `\"node_graph\"` \n - `\"predictable_csv_wave\"` \n - `\"predictable_pulse\"` \n - `\"random_walk\"` \n - `\"random_walk_table\"` \n - `\"random_walk_with_error\"` \n - `\"raw_frame\"` \n - `\"server_error_500\"` \n - `\"simulation\"` \n - `\"slow_query\"` \n - `\"streaming_client\"` \n - `\"table_static\"` \n - `\"trace\"` \n - `\"usa\"` \n - `\"variables-query\"` ",
                  "type": "string",
                  "enum": [
                    "annotations",
                    "arrow",
                    "csv_content",
                    "csv_file",
                    "csv_metric_values",
                    "datapoints_outside_range",
                    "exponential_heatmap_bucket_data",
                    "flame_graph",
                    "grafana_api",
                    "linear_heatmap_bucket_data",
                    "live",
                    "logs",
                    "manual_entry",
                    "no_data_points",
                    "node_graph",
                    "predictable_csv_wave",
                    "predictable_pulse",
                    "random_walk",
                    "random_walk_table",
                    "random_walk_with_error",
                    "raw_frame",
                    "server_error_500",
                    "simulation",
                    "slow_query",
                    "streaming_client",
                    "table_static",
                    "trace",
                    "usa",
                    "variables-query"
                  ],
                  "x-enum-description": {}
                },
                "seriesCount": { "type": "integer" },
                "sim": {
                  "type": "object",
                  "required": ["key"],
                  "properties": {
                    "config": { "type": "object" },
                    "key": {
                      "type": "object",
                      "required": ["tick", "type"],
                      "properties": {
                        "tick": { "type": "number" },
                        "type": { "type": "string" },
                        "uid": { "type": "string" }
                      },
                      "additionalProperties": false
                    },
                    "last": { "type": "boolean" },
                    "stream": { "type": "boolean" }
                  },
                  "additionalProperties": false
                },
                "spanCount": { "type": "integer" },
                "spread": { "type": "number" },
                "startValue": { "type": "number" },
                "stream": {
                  "type": "object",
                  "required": ["noise", "speed", "spread", "type"],
                  "properties": {
                    "bands": { "type": "integer" },
                    "noise": { "type": "number" },
                    "speed": { "type": "number" },
                    "spread": { "type": "number" },
                    "type": {
                      "description": "Possible enum values:\n - `\"fetch\"` \n - `\"logs\"` \n - `\"signal\"` \n - `\"traces\"` ",
                      "type": "string",
                      "enum": ["fetch", "logs", "signal", "traces"],
                      "x-enum-description": {}
                    },
                    "url": { "type": "string" }
                  },
                  "additionalProperties": false
                },
                "stringInput": { "description": "common parameter used by many query types", "type": "string" },
                "timeRange": {
                  "description": "TimeRange represents the query range\nNOTE: unlike generic /ds/query, we can now send explicit time values in each query\nNOTE: the values for timeRange are not saved in a dashboard, they are constructed on the fly",
                  "type": "object",
                  "required": ["from", "to"],
                  "properties": {
                    "from": {
                      "description": "From is the start time of the query.",
                      "type": "string",
                      "default": "now-6h"
                    },
                    "to": { "description": "To is the end time of the query.", "type": "string", "default": "now" }
                  },
                  "additionalProperties": false
                },
                "usa": {
                  "type": "object",
                  "properties": {
                    "fields": { "type": "array", "items": { "type": "string" } },
                    "mode": { "type": "string" },
                    "period": { "type": "string" },
                    "states": { "type": "array", "items": { "type": "string" } }
                  },
                  "additionalProperties": false
                },
                "withNil": { "type": "boolean" }
              },
              "additionalProperties": false
            }
          },
          "to": {
            "description": "To end time in epoch timestamps in milliseconds or relative using Grafana time units.",
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "com.github.grafana.grafana-plugin-sdk-go.backend.DataResponse": {
        "description": "todo... improve schema",
        "type": "object",
        "additionalProperties": true
      },
      "com.github.grafana.grafana-plugin-sdk-go.experimental.apis.data.v0alpha1.QueryTypeDefinitionSpec": {
        "type": "object",
        "required": ["schema", "examples"],
        "properties": {
          "changelog": {
            "description": "Changelog defines the changed from the previous version\nAll changes in the same version *must* be backwards compatible\nOnly notable changes will be shown here, for the full version history see git!",
            "type": "array",
            "items": { "type": "string" }
          },
          "description": { "description": "Describe whe the query type is for", "type": "string" },
          "discriminators": {
            "description": "Multiple schemas can be defined using discriminators",
            "type": "array",
            "items": {
              "type": "object",
              "required": ["field", "value"],
              "properties": {
                "field": {
                  "description": "DiscriminatorField is the field used to link behavior to this specific\nquery type.  It is typically \"queryType\", but can be another field if necessary",
                  "type": "string"
                },
                "value": { "description": "The discriminator value", "type": "string" }
              },
              "additionalProperties": false
            }
          },
          "examples": {
            "description": "Examples (include a wrapper) ideally a template!",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "description": { "description": "Optionally explain why the example is interesting", "type": "string" },
                "name": { "description": "Version identifier or empty if only one exists", "type": "string" },
                "saveModel": {
                  "description": "An example value saved that can be saved in a dashboard",
                  "type": "object",
                  "additionalProperties": true
                }
              },
              "additionalProperties": false
            }
          },
          "schema": {
            "description": "The query schema represents the properties that can be sent to the API\nIn many cases, this may be the same properties that are saved in a dashboard\nIn the case where the save model is different, we must also specify a save model",
            "type": "object",
            "allOf": [{ "$ref": "https://json-schema.org/draft-04/schema" }]
          }
        },
        "additionalProperties": false,
        "$schema": "https://json-schema.org/draft-04/schema"
      },
      "com.github.grafana.grafana.pkg.apimachinery.apis.common.v0alpha1.Unstructured": {
        "type": "object",
        "additionalProperties": true,
        "x-kubernetes-preserve-unknown-fields": true
      },
      "com.github.grafana.grafana.pkg.apis.datasource.v0alpha1.DataSourceConnection": {
        "type": "object",
        "required": ["title"],
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "description": {
            "description": "Optional description for the data source (does not exist yet)",
            "type": "string"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "default": {},
            "allOf": [{ "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta" }]
          },
          "title": { "description": "The display name", "type": "string", "default": "" }
        },
        "x-kubernetes-group-version-kind": [
          { "group": "graphite.datasource.grafana.app", "kind": "DataSourceConnection", "version": "__internal" },
          { "group": "graphite.datasource.grafana.app", "kind": "DataSourceConnection", "version": "v0alpha1" },
          { "group": "prometheus.datasource.grafana.app", "kind": "DataSourceConnection", "version": "__internal" },
          { "group": "prometheus.datasource.grafana.app", "kind": "DataSourceConnection", "version": "v0alpha1" },
          { "group": "testdata.datasource.grafana.app", "kind": "DataSourceConnection", "version": "__internal" },
          { "group": "testdata.datasource.grafana.app", "kind": "DataSourceConnection", "version": "v0alpha1" }
        ]
      },
      "com.github.grafana.grafana.pkg.apis.datasource.v0alpha1.DataSourceConnectionList": {
        "type": "object",
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "items": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/com.github.grafana.grafana.pkg.apis.datasource.v0alpha1.DataSourceConnection"
                }
              ]
            }
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "default": {},
            "allOf": [{ "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta" }]
          }
        },
        "x-kubernetes-group-version-kind": [
          { "group": "graphite.datasource.grafana.app", "kind": "DataSourceConnectionList", "version": "__internal" },
          { "group": "graphite.datasource.grafana.app", "kind": "DataSourceConnectionList", "version": "v0alpha1" },
          { "group": "prometheus.datasource.grafana.app", "kind": "DataSourceConnectionList", "version": "__internal" },
          { "group": "prometheus.datasource.grafana.app", "kind": "DataSourceConnectionList", "version": "v0alpha1" },
          { "group": "testdata.datasource.grafana.app", "kind": "DataSourceConnectionList", "version": "__internal" },
          { "group": "testdata.datasource.grafana.app", "kind": "DataSourceConnectionList", "version": "v0alpha1" }
        ]
      },
      "com.github.grafana.grafana.pkg.apis.datasource.v0alpha1.HealthCheckResult": {
        "type": "object",
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "code": { "description": "Explicit status code", "type": "integer", "format": "int32" },
          "details": {
            "description": "Spec depends on the plugin",
            "allOf": [
              {
                "$ref": "#/components/schemas/com.github.grafana.grafana.pkg.apimachinery.apis.common.v0alpha1.Unstructured"
              }
            ]
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "message": { "description": "Optional description for the data source", "type": "string" },
          "status": { "description": "The string description", "type": "string" }
        },
        "x-kubernetes-group-version-kind": [
          { "group": "graphite.datasource.grafana.app", "kind": "HealthCheckResult", "version": "__internal" },
          { "group": "graphite.datasource.grafana.app", "kind": "HealthCheckResult", "version": "v0alpha1" },
          { "group": "prometheus.datasource.grafana.app", "kind": "HealthCheckResult", "version": "__internal" },
          { "group": "prometheus.datasource.grafana.app", "kind": "HealthCheckResult", "version": "v0alpha1" },
          { "group": "testdata.datasource.grafana.app", "kind": "HealthCheckResult", "version": "__internal" },
          { "group": "testdata.datasource.grafana.app", "kind": "HealthCheckResult", "version": "v0alpha1" }
        ]
      },
      "com.github.grafana.grafana.pkg.apis.query.v0alpha1.QueryDataResponse": {
        "description": "Wraps backend.QueryDataResponse, however it includes TypeMeta and implements runtime.Object",
        "type": "object",
        "required": ["results"],
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "results": {
            "description": "Responses is a map of RefIDs (Unique Query ID) to *DataResponse.",
            "type": "object",
            "additionalProperties": {
              "default": {},
              "allOf": [
                { "$ref": "#/components/schemas/com.github.grafana.grafana-plugin-sdk-go.backend.DataResponse" }
              ]
            }
          }
        },
        "x-kubernetes-group-version-kind": [
          { "group": "graphite.datasource.grafana.app", "kind": "QueryDataResponse", "version": "__internal" },
          { "group": "graphite.datasource.grafana.app", "kind": "QueryDataResponse", "version": "v0alpha1" },
          { "group": "prometheus.datasource.grafana.app", "kind": "QueryDataResponse", "version": "__internal" },
          { "group": "prometheus.datasource.grafana.app", "kind": "QueryDataResponse", "version": "v0alpha1" },
          { "group": "query.grafana.app", "kind": "QueryDataResponse", "version": "v0alpha1" },
          { "group": "testdata.datasource.grafana.app", "kind": "QueryDataResponse", "version": "__internal" },
          { "group": "testdata.datasource.grafana.app", "kind": "QueryDataResponse", "version": "v0alpha1" }
        ]
      },
      "com.github.grafana.grafana.pkg.apis.query.v0alpha1.QueryTypeDefinition": {
        "description": "Defines a query behavior in a datasource.  This is a similar model to a CRD where the payload describes a valid query",
        "type": "object",
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "default": {},
            "allOf": [{ "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta" }]
          },
          "spec": {
            "default": {},
            "allOf": [
              {
                "$ref": "#/components/schemas/com.github.grafana.grafana-plugin-sdk-go.experimental.apis.data.v0alpha1.QueryTypeDefinitionSpec"
              }
            ]
          }
        },
        "x-kubernetes-group-version-kind": [
          { "group": "graphite.datasource.grafana.app", "kind": "QueryTypeDefinition", "version": "__internal" },
          { "group": "graphite.datasource.grafana.app", "kind": "QueryTypeDefinition", "version": "v0alpha1" },
          { "group": "prometheus.datasource.grafana.app", "kind": "QueryTypeDefinition", "version": "__internal" },
          { "group": "prometheus.datasource.grafana.app", "kind": "QueryTypeDefinition", "version": "v0alpha1" },
          { "group": "query.grafana.app", "kind": "QueryTypeDefinition", "version": "v0alpha1" },
          { "group": "testdata.datasource.grafana.app", "kind": "QueryTypeDefinition", "version": "__internal" },
          { "group": "testdata.datasource.grafana.app", "kind": "QueryTypeDefinition", "version": "v0alpha1" }
        ]
      },
      "com.github.grafana.grafana.pkg.apis.query.v0alpha1.QueryTypeDefinitionList": {
        "type": "object",
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "items": {
            "type": "array",
            "items": {
              "default": {},
              "allOf": [
                {
                  "$ref": "#/components/schemas/com.github.grafana.grafana.pkg.apis.query.v0alpha1.QueryTypeDefinition"
                }
              ]
            }
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "metadata": {
            "default": {},
            "allOf": [{ "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta" }]
          }
        },
        "x-kubernetes-group-version-kind": [
          { "group": "graphite.datasource.grafana.app", "kind": "QueryTypeDefinitionList", "version": "__internal" },
          { "group": "graphite.datasource.grafana.app", "kind": "QueryTypeDefinitionList", "version": "v0alpha1" },
          { "group": "prometheus.datasource.grafana.app", "kind": "QueryTypeDefinitionList", "version": "__internal" },
          { "group": "prometheus.datasource.grafana.app", "kind": "QueryTypeDefinitionList", "version": "v0alpha1" },
          { "group": "query.grafana.app", "kind": "QueryTypeDefinitionList", "version": "v0alpha1" },
          { "group": "testdata.datasource.grafana.app", "kind": "QueryTypeDefinitionList", "version": "__internal" },
          { "group": "testdata.datasource.grafana.app", "kind": "QueryTypeDefinitionList", "version": "v0alpha1" }
        ]
      },
      "io.k8s.apimachinery.pkg.apis.meta.v1.APIResource": {
        "description": "APIResource specifies the name of a resource and whether it is namespaced.",
        "type": "object",
        "required": ["name", "singularName", "namespaced", "kind", "verbs"],
        "properties": {
          "categories": {
            "description": "categories is a list of the grouped resources this resource belongs to (e.g. 'all')",
            "type": "array",
            "items": { "type": "string", "default": "" }
          },
          "group": {
            "description": "group is the preferred group of the resource.  Empty implies the group of the containing resource list. For subresources, this may have a different value, for example: Scale\".",
            "type": "string"
          },
          "kind": {
            "description": "kind is the kind for the resource (e.g. 'Foo' is the kind for a resource 'foo')",
            "type": "string",
            "default": ""
          },
          "name": { "description": "name is the plural name of the resource.", "type": "string", "default": "" },
          "namespaced": {
            "description": "namespaced indicates if a resource is namespaced or not.",
            "type": "boolean",
            "default": false
          },
          "shortNames": {
            "description": "shortNames is a list of suggested short names of the resource.",
            "type": "array",
            "items": { "type": "string", "default": "" }
          },
          "singularName": {
            "description": "singularName is the singular name of the resource.  This allows clients to handle plural and singular opaquely. The singularName is more correct for reporting status on a single item and both singular and plural are allowed from the kubectl CLI interface.",
            "type": "string",
            "default": ""
          },
          "storageVersionHash": {
            "description": "The hash value of the storage version, the version this resource is converted to when written to the data store. Value must be treated as opaque by clients. Only equality comparison on the value is valid. This is an alpha feature and may change or be removed in the future. The field is populated by the apiserver only if the StorageVersionHash feature gate is enabled. This field will remain optional even if it graduates.",
            "type": "string"
          },
          "verbs": {
            "description": "verbs is a list of supported kube verbs (this includes get, list, watch, create, update, patch, delete, deletecollection, and proxy)",
            "type": "array",
            "items": { "type": "string", "default": "" }
          },
          "version": {
            "description": "version is the preferred version of the resource.  Empty implies the version of the containing resource list For subresources, this may have a different value, for example: v1 (while inside a v1beta1 version of the core resource's group)\".",
            "type": "string"
          }
        }
      },
      "io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList": {
        "description": "APIResourceList is a list of APIResource, it is used to expose the name of the resources supported in a specific group and version, and if the resource is namespaced.",
        "type": "object",
        "required": ["groupVersion", "resources"],
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "groupVersion": {
            "description": "groupVersion is the group and version this APIResourceList is for.",
            "type": "string",
            "default": ""
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "resources": {
            "description": "resources contains the name of the resources and if they are namespaced.",
            "type": "array",
            "items": {
              "default": {},
              "allOf": [{ "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.APIResource" }]
            }
          }
        },
        "x-kubernetes-group-version-kind": [{ "group": "", "kind": "APIResourceList", "version": "v1" }]
      },
      "io.k8s.apimachinery.pkg.apis.meta.v1.FieldsV1": {
        "description": "FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.\n\nEach key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:\u003cname\u003e', where \u003cname\u003e is the name of a field in a struct, or key in a map 'v:\u003cvalue\u003e', where \u003cvalue\u003e is the exact json formatted value of a list item 'i:\u003cindex\u003e', where \u003cindex\u003e is position of a item in a list 'k:\u003ckeys\u003e', where \u003ckeys\u003e is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.\n\nThe exact format is defined in sigs.k8s.io/structured-merge-diff",
        "type": "object"
      },
      "io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta": {
        "description": "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.",
        "type": "object",
        "properties": {
          "continue": {
            "description": "continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a consistent list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response, unless you have received this token from an error message.",
            "type": "string"
          },
          "remainingItemCount": {
            "description": "remainingItemCount is the number of subsequent items in the list which are not included in this list response. If the list request contained label or field selectors, then the number of remaining items is unknown and the field will be left unset and omitted during serialization. If the list is complete (either because it is not chunking or because this is the last chunk), then there are no more remaining items and this field will be left unset and omitted during serialization. Servers older than v1.15 do not set this field. The intended use of the remainingItemCount is *estimating* the size of a collection. Clients should not rely on the remainingItemCount to be set or to be exact.",
            "type": "integer",
            "format": "int64"
          },
          "resourceVersion": {
            "description": "String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
            "type": "string"
          },
          "selfLink": {
            "description": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.",
            "type": "string"
          }
        }
      },
      "io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry": {
        "description": "ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.",
        "type": "object",
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the version of this resource that this field set applies to. The format is \"group/version\" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.",
            "type": "string"
          },
          "fieldsType": {
            "description": "FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: \"FieldsV1\"",
            "type": "string"
          },
          "fieldsV1": {
            "description": "FieldsV1 holds the first JSON version format as described in the \"FieldsV1\" type.",
            "allOf": [{ "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.FieldsV1" }]
          },
          "manager": {
            "description": "Manager is an identifier of the workflow managing these fields.",
            "type": "string"
          },
          "operation": {
            "description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.",
            "type": "string"
          },
          "subresource": {
            "description": "Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.",
            "type": "string"
          },
          "time": {
            "description": "Time is the timestamp of when the ManagedFields entry was added. The timestamp will also be updated if a field is added, the manager changes any of the owned fields value or removes a field. The timestamp does not update when a field is removed from the entry because another manager took it over.",
            "allOf": [{ "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Time" }]
          }
        }
      },
      "io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta": {
        "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
        "type": "object",
        "properties": {
          "annotations": {
            "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations",
            "type": "object",
            "additionalProperties": { "type": "string", "default": "" }
          },
          "creationTimestamp": {
            "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "allOf": [{ "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Time" }]
          },
          "deletionGracePeriodSeconds": {
            "description": "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.",
            "type": "integer",
            "format": "int64"
          },
          "deletionTimestamp": {
            "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "allOf": [{ "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Time" }]
          },
          "finalizers": {
            "description": "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.",
            "type": "array",
            "items": { "type": "string", "default": "" },
            "x-kubernetes-patch-strategy": "merge"
          },
          "generateName": {
            "description": "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will return a 409.\n\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency",
            "type": "string"
          },
          "generation": {
            "description": "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.",
            "type": "integer",
            "format": "int64"
          },
          "labels": {
            "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels",
            "type": "object",
            "additionalProperties": { "type": "string", "default": "" }
          },
          "managedFields": {
            "description": "ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like \"ci-cd\". The set of fields is always in the version that the workflow used when modifying the object.",
            "type": "array",
            "items": {
              "default": {},
              "allOf": [{ "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry" }]
            }
          },
          "name": {
            "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names",
            "type": "string"
          },
          "namespace": {
            "description": "Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces",
            "type": "string"
          },
          "ownerReferences": {
            "description": "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.",
            "type": "array",
            "items": {
              "default": {},
              "allOf": [{ "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference" }]
            },
            "x-kubernetes-patch-merge-key": "uid",
            "x-kubernetes-patch-strategy": "merge"
          },
          "resourceVersion": {
            "description": "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
            "type": "string"
          },
          "selfLink": {
            "description": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.",
            "type": "string"
          },
          "uid": {
            "description": "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids",
            "type": "string"
          }
        }
      },
      "io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference": {
        "description": "OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.",
        "type": "object",
        "required": ["apiVersion", "kind", "name", "uid"],
        "properties": {
          "apiVersion": { "description": "API version of the referent.", "type": "string", "default": "" },
          "blockOwnerDeletion": {
            "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.",
            "type": "boolean"
          },
          "controller": {
            "description": "If true, this reference points to the managing controller.",
            "type": "boolean"
          },
          "kind": {
            "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string",
            "default": ""
          },
          "name": {
            "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names",
            "type": "string",
            "default": ""
          },
          "uid": {
            "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids",
            "type": "string",
            "default": ""
          }
        },
        "x-kubernetes-map-type": "atomic"
      },
      "io.k8s.apimachinery.pkg.apis.meta.v1.Time": {
        "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
        "type": "string",
        "format": "date-time"
      }
    }
  }
}
